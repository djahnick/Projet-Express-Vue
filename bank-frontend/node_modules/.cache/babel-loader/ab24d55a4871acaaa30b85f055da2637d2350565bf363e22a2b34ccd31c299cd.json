{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'TransactionForm',\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      transaction: {\n        date: '',\n        category: '',\n        amount: null,\n        // null instead of 0 to allow for validation\n        description: ''\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      if (this.validateTransaction()) {\n        try {\n          await axios.post(`http://localhost:3000/accounts/${this.accountId}/transactions`, this.transaction);\n          this.$emit('transaction-created'); // Notify parent component\n          this.resetForm();\n          // Replace with a more user-friendly notification\n        } catch (error) {\n          console.error('Erreur lors de lajout de la transaction', error);\n          // Replace with a more user-friendly error notification\n        }\n      }\n    },\n\n    resetForm() {\n      this.transaction = {\n        date: '',\n        category: '',\n        amount: null,\n        description: ''\n      };\n    },\n    validateTransaction() {\n      // Implement validation logic\n      // For example, check if the amount is greater than zero\n      return this.transaction.amount > 0;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","accountId","type","Number","required","data","transaction","date","category","amount","description","methods","submitForm","validateTransaction","post","$emit","resetForm","error","console"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/components/TransactionForm.vue"],"sourcesContent":["<template>\n  <div class=\"form-container\">\n    <h2>Ajouter une Transaction</h2>\n    <form @submit.prevent=\"submitForm\" class=\"transaction-form\">\n      <div class=\"form-group\">\n        <label for=\"date\">Date:</label>\n        <input type=\"date\" id=\"date\" v-model=\"transaction.date\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"category\">Catégorie:</label>\n        <select id=\"category\" v-model=\"transaction.category\" required>\n          <option disabled value=\"\">Sélectionnez une catégorie</option>\n          <option value=\"dépense\">dépense</option>\n          <option value=\"revenu\">revenu</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"amount\">Montant:</label>\n        <input type=\"number\" id=\"amount\" v-model.number=\"transaction.amount\" min=\"0.01\" step=\"0.01\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\">Description:</label>\n        <textarea id=\"description\" v-model=\"transaction.description\"></textarea>\n      </div>\n      <button type=\"submit\" class=\"submit-button\">Soumettre la Transaction</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'TransactionForm',\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      transaction: {\n        date: '',\n        category: '',\n        amount: null, // null instead of 0 to allow for validation\n        description: ''\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      if (this.validateTransaction()) {\n        try {\n          await axios.post(`http://localhost:3000/accounts/${this.accountId}/transactions`, this.transaction);\n          this.$emit('transaction-created'); // Notify parent component\n          this.resetForm();\n          // Replace with a more user-friendly notification\n        } catch (error) {\n          console.error('Erreur lors de lajout de la transaction', error);\n          // Replace with a more user-friendly error notification\n        }\n      }\n    },\n    resetForm() {\n      this.transaction = { date: '', category: '', amount: null, description: '' };\n    },\n    validateTransaction() {\n      // Implement validation logic\n      // For example, check if the amount is greater than zero\n      return this.transaction.amount > 0;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.form-container {\n  /* Your styles here */\n}\n.form-group {\n  margin-bottom: 1rem;\n}\n.submit-button {\n  /* Style your button */\n}\n/* ... */\n</style>\n"],"mappings":"AA8BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;QACXC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,IAAI;QAAE;QACdC,WAAW,EAAE;MACf;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI,IAAI,CAACC,mBAAmB,CAAC,CAAC,EAAE;QAC9B,IAAI;UACF,MAAMf,KAAK,CAACgB,IAAI,CAAE,kCAAiC,IAAI,CAACb,SAAU,eAAc,EAAE,IAAI,CAACK,WAAW,CAAC;UACnG,IAAI,CAACS,KAAK,CAAC,qBAAqB,CAAC,EAAE;UACnC,IAAI,CAACC,SAAS,CAAC,CAAC;UAChB;QACF,EAAE,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;UAC/D;QACF;MACF;IACF,CAAC;;IACDD,SAASA,CAAA,EAAG;MACV,IAAI,CAACV,WAAU,GAAI;QAAEC,IAAI,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,MAAM,EAAE,IAAI;QAAEC,WAAW,EAAE;MAAG,CAAC;IAC9E,CAAC;IACDG,mBAAmBA,CAAA,EAAG;MACpB;MACA;MACA,OAAO,IAAI,CAACP,WAAW,CAACG,MAAK,GAAI,CAAC;IACpC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}