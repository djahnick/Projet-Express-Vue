{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e1e7ce2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container mx-auto p-8\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-2xl font-semibold mb-6\"\n}, \"Détails du Compte\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-sm font-bold mb-2\"\n}, \"Nom du Compte:\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"mb-4\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-sm font-bold mb-2\"\n}, \"Solde:\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"mb-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TransactionForm = _resolveComponent(\"TransactionForm\");\n  const _component_TransactionList = _resolveComponent(\"TransactionList\");\n  const _component_AccountChart = _resolveComponent(\"AccountChart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"p\", _hoisted_5, _toDisplayString($data.accountDetails.accountName), 1 /* TEXT */), _hoisted_6, _createElementVNode(\"p\", _hoisted_7, _toDisplayString($options.formattedBalance), 1 /* TEXT */)]), _createVNode(_component_TransactionForm, {\n    accountId: $data.accountDetails.id,\n    onTransactionCreated: $options.updateTransactions\n  }, null, 8 /* PROPS */, [\"accountId\", \"onTransactionCreated\"]), _createVNode(_component_TransactionList, {\n    ref: \"transactionList\",\n    accountId: $data.accountDetails.id\n  }, null, 8 /* PROPS */, [\"accountId\"]), _createVNode(_component_AccountChart, {\n    accountId: $data.accountDetails.id\n  }, null, 8 /* PROPS */, [\"accountId\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","$data","accountDetails","accountName","_hoisted_6","_hoisted_7","$options","formattedBalance","_createVNode","_component_TransactionForm","accountId","id","onTransactionCreated","updateTransactions","_component_TransactionList","ref","_component_AccountChart"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/views/AccountDetails.vue"],"sourcesContent":["<template>\n  <div class=\"container mx-auto p-8\">\n    <h2 class=\"text-2xl font-semibold mb-6\">Détails du Compte</h2>\n    \n    <div class=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n      <p class=\"text-sm font-bold mb-2\">Nom du Compte:</p>\n      <p class=\"mb-4\">{{ accountDetails.accountName }}</p>\n      <p class=\"text-sm font-bold mb-2\">Solde:</p>\n      <p class=\"mb-4\">{{ formattedBalance }}</p>\n    </div>\n    \n    <TransactionForm \n      :accountId=\"accountDetails.id\" \n      @transaction-created=\"updateTransactions\"\n    />\n\n    <TransactionList \n      ref=\"transactionList\" \n      :accountId=\"accountDetails.id\"\n    />\n    <AccountChart :accountId=\"accountDetails.id\" />\n\n    \n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport TransactionForm from '../components/TransactionForm.vue';\nimport TransactionList from '../components/TransactionList.vue';\nimport AccountChart from '../components/AccountChart.vue'; // Assurez-vous que le chemin d'importation est correct\n\n\nexport default {\n  name: 'AccountDetails',\n  components: {\n    TransactionForm,\n    TransactionList,\n    AccountChart\n    \n  },\n  data() {\n    return {\n      // Set initial values to avoid errors before the actual data is fetched\n      accountDetails: {\n        balance: 0,\n        currency: 'EUR', // Replace 'EUR' with your default or expected currency\n        accountName: '',\n        id: null\n      }\n    };\n  },\n  computed: {\n    formattedBalance() {\n      // Check if accountDetails has the necessary properties to avoid errors\n      if (typeof this.accountDetails.currency === 'string' && typeof this.accountDetails.balance === 'number') {\n        return new Intl.NumberFormat('fr-FR', {\n          style: 'currency',\n          currency: this.accountDetails.currency\n        }).format(this.accountDetails.balance);\n      }\n      // Return a placeholder or empty string if the data is not yet available\n      return 'Chargement...';\n    }\n  },\n  async created() {\n    await this.fetchAccountDetails();\n  },\n  methods: {\n    async fetchAccountDetails() {\n      try {\n        const accountId = this.$route.params.id;\n        const response = await axios.get(`http://localhost:3000/accounts/${accountId}`);\n        this.accountDetails = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des détails du compte', error);\n        // Handle error, show user-friendly message if needed\n      }\n    },\n    async updateTransactions() {\n      // Refresh account details and transaction list\n      await this.fetchAccountDetails();\n      if (this.$refs.transactionList) {\n        this.$refs.transactionList.fetchTransactions();\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAuB;gEAChCC,mBAAA,CAA8D;EAA1DD,KAAK,EAAC;AAA6B,GAAC,mBAAiB;;EAEpDA,KAAK,EAAC;AAAgD;gEACzDC,mBAAA,CAAoD;EAAjDD,KAAK,EAAC;AAAwB,GAAC,gBAAc;;EAC7CA,KAAK,EAAC;AAAM;gEACfC,mBAAA,CAA4C;EAAzCD,KAAK,EAAC;AAAwB,GAAC,QAAM;;EACrCA,KAAK,EAAC;AAAM;;;;;uBAPnBE,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,UAA8D,EAE9DH,mBAAA,CAKM,OALNI,UAKM,GAJJC,UAAoD,EACpDL,mBAAA,CAAoD,KAApDM,UAAoD,EAAAC,gBAAA,CAAjCC,KAAA,CAAAC,cAAc,CAACC,WAAW,kBAC7CC,UAA4C,EAC5CX,mBAAA,CAA0C,KAA1CY,UAA0C,EAAAL,gBAAA,CAAvBM,QAAA,CAAAC,gBAAgB,iB,GAGrCC,YAAA,CAGEC,0BAAA;IAFCC,SAAS,EAAET,KAAA,CAAAC,cAAc,CAACS,EAAE;IAC5BC,oBAAmB,EAAEN,QAAA,CAAAO;kEAGxBL,YAAA,CAGEM,0BAAA;IAFAC,GAAG,EAAC,iBAAiB;IACpBL,SAAS,EAAET,KAAA,CAAAC,cAAc,CAACS;0CAE7BH,YAAA,CAA+CQ,uBAAA;IAAhCN,SAAS,EAAET,KAAA,CAAAC,cAAc,CAACS"},"metadata":{},"sourceType":"module","externalDependencies":[]}