{"ast":null,"code":"import axios from 'axios';\nimport TransactionForm from '../components/TransactionForm.vue';\nimport TransactionList from '../components/TransactionList.vue';\nexport default {\n  name: 'AccountDetails',\n  components: {\n    TransactionForm,\n    TransactionList\n  },\n  data() {\n    return {\n      accountDetails: {}\n    };\n  },\n  async created() {\n    await this.fetchAccountDetails();\n  },\n  methods: {\n    async fetchAccountDetails() {\n      try {\n        const accountId = this.$route.params.id;\n        const response = await axios.get(`http://localhost:3000/accounts/${accountId}`);\n        this.accountDetails = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des détails du compte', error);\n      }\n    },\n    async updateTransactions() {\n      await this.fetchAccountDetails(); // Rafraîchir les détails du compte\n      this.$refs.transactionList.fetchTransactions(); // Rafraîchir la liste des transactions\n    }\n  }\n};","map":{"version":3,"names":["axios","TransactionForm","TransactionList","name","components","data","accountDetails","created","fetchAccountDetails","methods","accountId","$route","params","id","response","get","error","console","updateTransactions","$refs","transactionList","fetchTransactions"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/views/AccountDetails.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Détails du Compte</h2>\n    <p>Nom du Compte: {{ accountDetails.accountName }}</p>\n    <p>Solde: {{ accountDetails.balance }} {{ accountDetails.currency }}</p>\n    \n    <TransactionForm :accountId=\"accountDetails.id\" @transaction-created=\"updateTransactions\"></TransactionForm>\n\n  <TransactionList ref=\"transactionList\" :accountId=\"accountDetails.id\"></TransactionList>\n  </div>\n\n<div class=\"relative max-w-sm\">\n  <div class=\"absolute inset-y-0 left-0 flex items-center pl-3.5 pointer-events-none\">\n    <svg class=\"w-4 h-4 text-gray-500 dark:text-gray-400\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n      <path d=\"M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z\"/>\n    </svg>\n  </div>\n  <input datepicker type=\"text\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" placeholder=\"Select date\">\n</div>\n\n</template>\n\n<script>\nimport axios from 'axios';\nimport TransactionForm from '../components/TransactionForm.vue';\nimport TransactionList from '../components/TransactionList.vue';\n\nexport default {\n  name: 'AccountDetails',\n  components: {\n    TransactionForm,\n    TransactionList\n  },\n  data() {\n    return {\n      accountDetails: {}\n    };\n  },\n  async created() {\n    await this.fetchAccountDetails();\n  },\n  methods: {\n    async fetchAccountDetails() {\n      try {\n        const accountId = this.$route.params.id;\n        const response = await axios.get(`http://localhost:3000/accounts/${accountId}`);\n        this.accountDetails = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des détails du compte', error);\n      }\n    },\n    async updateTransactions() {\n      await this.fetchAccountDetails(); // Rafraîchir les détails du compte\n      this.$refs.transactionList.fetchTransactions(); // Rafraîchir la liste des transactions\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Styles si nécessaire */\n</style>\n"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,eAAc,MAAO,mCAAmC;AAC/D,OAAOC,eAAc,MAAO,mCAAmC;AAE/D,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACVH,eAAe;IACfC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,CAAC;IACnB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,mBAAmB,CAAC,CAAC;EAClC,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,mBAAmBA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAME,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;QACvC,MAAMC,QAAO,GAAI,MAAMd,KAAK,CAACe,GAAG,CAAE,kCAAiCL,SAAU,EAAC,CAAC;QAC/E,IAAI,CAACJ,cAAa,GAAIQ,QAAQ,CAACT,IAAI;MACrC,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sDAAsD,EAAEA,KAAK,CAAC;MAC9E;IACF,CAAC;IACD,MAAME,kBAAkBA,CAAA,EAAG;MACzB,MAAM,IAAI,CAACV,mBAAmB,CAAC,CAAC,EAAE;MAClC,IAAI,CAACW,KAAK,CAACC,eAAe,CAACC,iBAAiB,CAAC,CAAC,EAAE;IAClD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}