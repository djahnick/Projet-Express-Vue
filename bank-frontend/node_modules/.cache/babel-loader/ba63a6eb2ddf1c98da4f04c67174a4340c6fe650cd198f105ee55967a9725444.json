{"ast":null,"code":"import TransactionForm from './TransactionForm.vue';\nimport TransactionList from './TransactionList.vue';\nimport axios from 'axios';\nexport default {\n  name: 'AccountDetails',\n  components: {\n    TransactionForm,\n    TransactionList\n  },\n  data() {\n    return {\n      accountDetails: null\n    };\n  },\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  created() {\n    this.fetchAccountDetails();\n  },\n  methods: {\n    async fetchAccountDetails() {\n      try {\n        const response = await axios.get(`http://localhost:3000/accounts/${this.accountId}`);\n        this.accountDetails = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des détails du compte', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["TransactionForm","TransactionList","axios","name","components","data","accountDetails","props","accountId","type","Number","required","created","fetchAccountDetails","methods","response","get","error","console"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/views/AccountDetails.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Détails du Compte</h2>\n    <p>Nom du Compte: {{ accountDetails.accountName }}</p>\n    <p>Solde: {{ accountDetails.balance }} {{ accountDetails.currency }}</p>\n\n    <!-- Formulaire pour ajouter une transaction -->\n    <TransactionForm :accountId=\"accountDetails.id\" @transaction-added=\"fetchAccountDetails\"></TransactionForm>\n    \n    <!-- Liste des transactions -->\n    <TransactionList :transactions=\"accountDetails.transactions\"></TransactionList>\n  </div>\n</template>\n\n<script>\nimport TransactionForm from './TransactionForm.vue';\nimport TransactionList from './TransactionList.vue';\nimport axios from 'axios';\n\nexport default {\n  name: 'AccountDetails',\n  components: {\n    TransactionForm,\n    TransactionList\n  },\n  data() {\n    return {\n      accountDetails: null\n    };\n  },\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  created() {\n    this.fetchAccountDetails();\n  },\n  methods: {\n    async fetchAccountDetails() {\n      try {\n        const response = await axios.get(`http://localhost:3000/accounts/${this.accountId}`);\n        this.accountDetails = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des détails du compte', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Votre style ici si nécessaire */\n</style>\n"],"mappings":"AAeA,OAAOA,eAAc,MAAO,uBAAuB;AACnD,OAAOC,eAAc,MAAO,uBAAuB;AACnD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACVJ,eAAe;IACfC;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,mBAAmB,CAAC,CAAC;EAC5B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,mBAAmBA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAME,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAE,kCAAiC,IAAI,CAACR,SAAU,EAAC,CAAC;QACpF,IAAI,CAACF,cAAa,GAAIS,QAAQ,CAACV,IAAI;MACrC,EAAE,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sDAAsD,EAAEA,KAAK,CAAC;MAC9E;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}