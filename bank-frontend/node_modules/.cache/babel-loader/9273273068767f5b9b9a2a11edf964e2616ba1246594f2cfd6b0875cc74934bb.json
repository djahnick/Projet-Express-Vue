{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_line_chart = _resolveComponent(\"line-chart\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_line_chart, {\n    \"chart-data\": $data.chartData,\n    options: $data.chartOptions\n  }, null, 8 /* PROPS */, [\"chart-data\", \"options\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_line_chart","$data","chartData","options","chartOptions"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/components/AccountChart.vue"],"sourcesContent":["<template>\n  <div>\n    <line-chart :chart-data=\"chartData\" :options=\"chartOptions\"/>\n  </div>\n</template>\n\n<script>\nimport { Line } from 'vue-chartjs'\nimport axios from 'axios'\n\nexport default {\n  extends: Line,\n  props: {\n    accountId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data() {\n    return {\n      chartData: null,\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    }\n  },\n  async mounted () {\n    await this.fetchChartData()\n  },\n  methods: {\n    async fetchChartData() {\n      try {\n        const transactionsResponse = await axios.get(`http://localhost:3000/accounts/${this.accountId}/transactions`);\n        const transactions = transactionsResponse.data;\n\n        // Préparez vos données ici à partir des transactions\n        const labels = transactions.map(t => t.date); // Date de transaction\n        const data = transactions.map(t => t.balance); // Solde après chaque transaction\n\n        this.chartData = {\n          labels,\n          datasets: [\n            {\n              label: 'Solde',\n              backgroundColor: '#f87979',\n              data\n            }\n          ]\n        };\n\n        this.renderChart(this.chartData, this.chartOptions);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données des transactions', error);\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* Vos styles ici */\n</style>\n"],"mappings":";;;uBACEA,mBAAA,CAEM,cADJC,YAAA,CAA6DC,qBAAA;IAAhD,YAAU,EAAEC,KAAA,CAAAC,SAAS;IAAGC,OAAO,EAAEF,KAAA,CAAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}