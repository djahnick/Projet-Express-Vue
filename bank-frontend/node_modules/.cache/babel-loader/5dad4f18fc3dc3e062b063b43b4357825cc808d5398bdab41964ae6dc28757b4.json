{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'TransactionForm',\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      transaction: {\n        date: '',\n        category: '',\n        amount: 0,\n        description: ''\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        const response = await axios.post(`http://localhost:3000/transactions/${this.accountId}`, this.transaction);\n        alert('Transaction ajoutée avec succès!');\n        this.$emit('transaction-added'); // Émettre l'événement\n        // Réinitialiser le formulaire\n        this.transaction.amount = 0;\n        this.transaction.type = 'credit';\n      } catch (error) {\n        console.error('Erreur lors de lajout de la transaction', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","accountId","type","Number","required","data","transaction","date","category","amount","description","methods","submitForm","response","post","alert","$emit","error","console"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/components/TransactionForm.vue"],"sourcesContent":["<template>\n  <div>\n\n    <h2>Ajouter une Transaction</h2>\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"date\">Date:</label>\n        <input type=\"date\" id=\"date\" v-model=\"transaction.date\" required>\n      </div>\n      <div>\n        <label for=\"category\">Catégorie:</label>\n        <select id=\"category\" v-model=\"transaction.category\" required>\n          <option value=\"dépense\">Dépense</option>\n          <option value=\"entrée\">Entrée</option>\n        </select>\n      </div>\n      <div>\n        <label for=\"amount\">Montant:</label>\n        <input type=\"number\" id=\"amount\" v-model=\"transaction.amount\" required>\n      </div>\n      <div>\n        <label for=\"description\">Description:</label>\n        <textarea id=\"description\" v-model=\"transaction.description\"></textarea>\n      </div>\n      <button type=\"submit\">Soumettre la Transaction</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'TransactionForm',\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      transaction: {\n        date: '',\n        category: '',\n        amount: 0,\n        description: ''\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n  try {\n    const response = await axios.post(`http://localhost:3000/transactions/${this.accountId}`, this.transaction);\n    alert('Transaction ajoutée avec succès!');\n    this.$emit('transaction-added'); // Émettre l'événement\n    // Réinitialiser le formulaire\n    this.transaction.amount = 0;\n    this.transaction.type = 'credit';\n  } catch (error) {\n    console.error('Erreur lors de lajout de la transaction', error);\n  }\n}\n  }\n};\n</script>\n\n<style scoped>\n/* ... */\n</style>\n"],"mappings":"AA8BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;QACXC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,CAAC;QACTC,WAAW,EAAE;MACf;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMf,KAAK,CAACgB,IAAI,CAAE,sCAAqC,IAAI,CAACb,SAAU,EAAC,EAAE,IAAI,CAACK,WAAW,CAAC;QAC3GS,KAAK,CAAC,kCAAkC,CAAC;QACzC,IAAI,CAACC,KAAK,CAAC,mBAAmB,CAAC,EAAE;QACjC;QACA,IAAI,CAACV,WAAW,CAACG,MAAK,GAAI,CAAC;QAC3B,IAAI,CAACH,WAAW,CAACJ,IAAG,GAAI,QAAQ;MAClC,EAAE,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACjE;IACF;EACE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}