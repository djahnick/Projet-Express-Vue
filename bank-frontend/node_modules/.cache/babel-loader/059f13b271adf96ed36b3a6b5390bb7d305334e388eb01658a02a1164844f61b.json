{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3e5c16c8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Transactions\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.transactions, transaction => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: transaction.id\n    }, _toDisplayString(transaction.date) + \" - \" + _toDisplayString(transaction.amount) + \" \" + _toDisplayString(transaction.currency), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","transactions","transaction","key","id","date","_toDisplayString","amount","currency"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/components/TransactionList.vue"],"sourcesContent":["<template>\n    <div>\n      <h2>Transactions</h2>\n      <ul>\n        <li v-for=\"transaction in transactions\" :key=\"transaction.id\">\n          {{ transaction.date }} - {{ transaction.amount }} {{ transaction.currency }}\n        </li>\n      </ul>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    name: 'TransactionList',\n    props: {\n      accountId: {\n        type: Number,\n        required: true\n      }\n    },\n    data() {\n      return {\n        transactions: []\n      };\n    },\n    async created() {\n      try {\n        // Remplacez par l'appel API approprié\n        // const response = await axios.get(`URL_DE_API/${this.accountId}/transactions`);\n        this.transactions = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des transactions', error);\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  /* Ajoutez du CSS ici si nécessaire */\n  </style>\n  "],"mappings":";;gEAEMA,mBAAA,CAAqB,YAAjB,cAAY;;;uBADlBC,mBAAA,CAOM,cANJC,UAAqB,EACrBF,mBAAA,CAIK,c,kBAHHC,mBAAA,CAEKE,SAAA,QAAAC,WAAA,CAFqBC,KAAA,CAAAC,YAAY,EAA3BC,WAAW;yBAAtBN,mBAAA,CAEK;MAFoCO,GAAG,EAAED,WAAW,CAACE;wBACrDF,WAAW,CAACG,IAAI,IAAG,KAAG,GAAAC,gBAAA,CAAGJ,WAAW,CAACK,MAAM,IAAG,GAAC,GAAAD,gBAAA,CAAGJ,WAAW,CAACM,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}