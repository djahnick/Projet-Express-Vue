{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'TransactionList',\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      transactions: []\n    };\n  },\n  watch: {\n    accountId: {\n      immediate: true,\n      handler() {\n        this.fetchTransactions();\n      }\n    }\n  },\n  lastUpdate() {\n    this.fetchTransactions(); // Réagir aux changements de lastUpdate\n  },\n\n  methods: {\n    async fetchTransactions() {\n      try {\n        const response = await axios.get(`http://localhost:3000/accounts/${this.accountId}/transactions`);\n        this.transactions = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des transactions', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","accountId","type","Number","required","data","transactions","watch","immediate","handler","fetchTransactions","lastUpdate","methods","response","get","error","console"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/components/TransactionList.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Transactions</h2>\n    <ul>\n      <li v-for=\"transaction in transactions\" :key=\"transaction.id\">\n        <strong>ID:</strong> {{ transaction.id }}<br>\n        <strong>Date:</strong> {{ transaction.date }}<br>\n        <strong>Catégorie:</strong> {{ transaction.category }}<br>\n        <strong>Montant:</strong> {{ transaction.amount }}<br>\n        <strong>Description:</strong> {{ transaction.description }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'TransactionList',\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      transactions: []\n    };\n  },\n  watch: {\n    accountId: {\n      immediate: true,\n      handler() {\n        this.fetchTransactions();\n      }\n    }\n  },\n  lastUpdate() {\n    this.fetchTransactions();  // Réagir aux changements de lastUpdate\n  },\n  methods: {\n    async fetchTransactions() {\n      try {\n        const response = await axios.get(`http://localhost:3000/accounts/${this.accountId}/transactions`);\n        this.transactions = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des transactions', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Votre CSS ici */\n</style>"],"mappings":"AAkBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLN,SAAS,EAAE;MACTO,SAAS,EAAE,IAAI;MACfC,OAAOA,CAAA,EAAG;QACR,IAAI,CAACC,iBAAiB,CAAC,CAAC;MAC1B;IACF;EACF,CAAC;EACDC,UAAUA,CAAA,EAAG;IACX,IAAI,CAACD,iBAAiB,CAAC,CAAC,EAAG;EAC7B,CAAC;;EACDE,OAAO,EAAE;IACP,MAAMF,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAE,kCAAiC,IAAI,CAACb,SAAU,eAAc,CAAC;QACjG,IAAI,CAACK,YAAW,GAAIO,QAAQ,CAACR,IAAI;MACnC,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACzE;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}