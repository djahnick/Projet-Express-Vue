{"ast":null,"code":"import AccountInfo from '../components/AccountInfo.vue';\nimport AccountChart from '../components/AccountChart.vue';\nimport TransactionForm from '../components/TransactionForm.vue';\nimport TransactionList from '../components/TransactionList.vue';\nexport default {\n  name: 'AccountDetails',\n  data() {\n    return {\n      selectedAccount: null // You can set the selected account from your API data\n    };\n  },\n\n  components: {\n    AccountInfo,\n    AccountChart,\n    TransactionForm,\n    TransactionList\n  },\n  methods: {\n    async fetchAccountDetails() {\n      try {\n        const accountId = this.$route.params.id;\n        const response = await axios.get(`http://localhost:3000/accounts/${accountId}`);\n        this.accountDetails = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des détails du compte', error);\n        // Handle error, show user-friendly message if needed\n      }\n    },\n\n    async updateTransactions() {\n      // Refresh account details and transaction list\n      await this.fetchAccountDetails();\n      if (this.$refs.transactionList) {\n        this.$refs.transactionList.fetchTransactions();\n      }\n    }\n  }\n};","map":{"version":3,"names":["AccountInfo","AccountChart","TransactionForm","TransactionList","name","data","selectedAccount","components","methods","fetchAccountDetails","accountId","$route","params","id","response","axios","get","accountDetails","error","console","updateTransactions","$refs","transactionList","fetchTransactions"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/views/AccountDetails.vue"],"sourcesContent":["<!-- bank-frontend/src/views/AccountDetails.vue -->\n\n<template>\n    <div>\n  \n      <!-- Display Account Information -->\n      <AccountInfo :account=\"selectedAccount\" />\n  \n      <!-- Display Account Chart -->\n      <AccountChart :account=\"selectedAccount\" />\n  \n      <!-- Transaction Form -->\n      <TransactionForm :account=\"selectedAccount\" />\n  \n      <!-- Transaction List -->\n      <TransactionList :account=\"selectedAccount\" />\n    </div>\n  </template>\n  \n  <script>\n  import AccountInfo from '../components/AccountInfo.vue';\n  import AccountChart from '../components/AccountChart.vue';\n  import TransactionForm from '../components/TransactionForm.vue';\n  import TransactionList from '../components/TransactionList.vue';\n  \n  export default {\n    name: 'AccountDetails',\n    data() {\n      return {\n        selectedAccount: null, // You can set the selected account from your API data\n      };\n    },\n    components: {\n      AccountInfo,\n      AccountChart,\n      TransactionForm,\n      TransactionList,\n    },\n    methods: {\n    async fetchAccountDetails() {\n      try {\n        const accountId = this.$route.params.id;\n        const response = await axios.get(`http://localhost:3000/accounts/${accountId}`);\n        this.accountDetails = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des détails du compte', error);\n        // Handle error, show user-friendly message if needed\n      }\n    },\n    async updateTransactions() {\n      // Refresh account details and transaction list\n      await this.fetchAccountDetails();\n      if (this.$refs.transactionList) {\n        this.$refs.transactionList.fetchTransactions();\n      }\n    }\n  }\n  };\n  </script>\n  "],"mappings":"AAoBE,OAAOA,WAAU,MAAO,+BAA+B;AACvD,OAAOC,YAAW,MAAO,gCAAgC;AACzD,OAAOC,eAAc,MAAO,mCAAmC;AAC/D,OAAOC,eAAc,MAAO,mCAAmC;AAE/D,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,IAAI,CAAE;IACzB,CAAC;EACH,CAAC;;EACDC,UAAU,EAAE;IACVP,WAAW;IACXC,YAAY;IACZC,eAAe;IACfC;EACF,CAAC;EACDK,OAAO,EAAE;IACT,MAAMC,mBAAmBA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAMC,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;QACvC,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAACC,GAAG,CAAE,kCAAiCN,SAAU,EAAC,CAAC;QAC/E,IAAI,CAACO,cAAa,GAAIH,QAAQ,CAACT,IAAI;MACrC,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sDAAsD,EAAEA,KAAK,CAAC;QAC5E;MACF;IACF,CAAC;;IACD,MAAME,kBAAkBA,CAAA,EAAG;MACzB;MACA,MAAM,IAAI,CAACX,mBAAmB,CAAC,CAAC;MAChC,IAAI,IAAI,CAACY,KAAK,CAACC,eAAe,EAAE;QAC9B,IAAI,CAACD,KAAK,CAACC,eAAe,CAACC,iBAAiB,CAAC,CAAC;MAChD;IACF;EACF;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}