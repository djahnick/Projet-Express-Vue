{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watchEffect } from 'vue';\nimport { LineChart } from 'vue-chart-3';\nimport { Chart, registerables } from 'chart.js';\nimport axios from 'axios'; // Import Axios for API requests\n\nChart.register(...registerables);\nexport default {\n  components: {\n    LineChart\n  },\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const chartData = ref({\n      labels: [],\n      datasets: [{\n        label: 'Total Dépenses',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n        borderColor: 'rgb(255, 99, 132)',\n        fill: false,\n        data: []\n      }, {\n        label: 'Total Revenus',\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n        borderColor: 'rgb(75, 192, 192)',\n        fill: false,\n        data: []\n      }, {\n        label: 'Solde',\n        backgroundColor: 'rgba(54, 162, 235, 0.5)',\n        borderColor: 'rgb(54, 162, 235)',\n        fill: false,\n        data: []\n      }]\n    });\n    const chartOptions = ref({\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        y: {\n          beginAtZero: false\n        }\n      }\n    });\n\n    // Fetch account details and transactions\n    async function fetchAccountDetailsAndTransactions() {\n      try {\n        const accountId = props.accountId;\n\n        // Fetch account details\n        const accountResponse = await axios.get(`http://localhost:3000/accounts/${accountId}`);\n        const accountDetails = accountResponse.data;\n\n        // Fetch transactions for the account\n        const transactionsResponse = await axios.get(`http://localhost:3000/accounts/${accountId}/transactions`);\n        const transactions = transactionsResponse.data;\n        updateChartData(accountDetails, transactions);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données', error);\n        // Handle error, show user-friendly message if needed\n      }\n    }\n\n    // Watch for changes in props.accountId\n    watchEffect(() => {\n      if (props.accountId) {\n        fetchAccountDetailsAndTransactions();\n      }\n    });\n    function updateChartData(accountDetails, transactions) {\n      // Clear existing data\n      chartData.value.labels = [];\n      chartData.value.datasets[0].data = []; // Dépenses\n      chartData.value.datasets[1].data = []; // Revenus\n      chartData.value.datasets[2].data = []; // Solde\n\n      let totalExpenses = 0;\n      let totalRevenues = 0;\n      let balance = 0;\n      transactions.forEach(transaction => {\n        let transactionDate = new Date(transaction.date).toLocaleDateString('fr-FR');\n        chartData.value.labels.push(transactionDate);\n        if (transaction.category === 'Dépense') {\n          totalExpenses += Math.abs(transaction.amount); // Les dépenses sont négatives\n          balance += transaction.amount;\n        } else {\n          totalRevenues += transaction.amount;\n          balance += transaction.amount;\n        }\n        chartData.value.datasets[0].data.push(totalExpenses);\n        chartData.value.datasets[1].data.push(totalRevenues);\n        chartData.value.datasets[2].data.push(balance);\n      });\n    }\n    return {\n      chartData,\n      chartOptions\n    };\n  }\n};","map":{"version":3,"names":["ref","watchEffect","LineChart","Chart","registerables","axios","register","components","props","accountId","type","Number","required","setup","chartData","labels","datasets","label","backgroundColor","borderColor","fill","data","chartOptions","responsive","maintainAspectRatio","scales","y","beginAtZero","fetchAccountDetailsAndTransactions","accountResponse","get","accountDetails","transactionsResponse","transactions","updateChartData","error","console","value","totalExpenses","totalRevenues","balance","forEach","transaction","transactionDate","Date","date","toLocaleDateString","push","category","Math","abs","amount"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/components/AccountChart.vue"],"sourcesContent":["<template>\n    <div>\n      <line-chart :chart-data=\"chartData\" :options=\"chartOptions\" />\n    </div>\n  </template>\n  \n  <script>\n  import { ref, watchEffect } from 'vue';\n  import { LineChart } from 'vue-chart-3';\n  import { Chart, registerables } from 'chart.js';\n  import axios from 'axios'; // Import Axios for API requests\n  \n  Chart.register(...registerables);\n  \n  export default {\n    components: {\n      LineChart,\n    },\n    props: {\n      accountId: {\n        type: Number,\n        required: true,\n      },\n    },\n    setup(props) {\n      const chartData = ref({\n        labels: [],\n        datasets: [\n          {\n            label: 'Total Dépenses',\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\n            borderColor: 'rgb(255, 99, 132)',\n            fill: false,\n            data: [],\n          },\n          {\n            label: 'Total Revenus',\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\n            borderColor: 'rgb(75, 192, 192)',\n            fill: false,\n            data: [],\n          },\n          {\n            label: 'Solde',\n            backgroundColor: 'rgba(54, 162, 235, 0.5)',\n            borderColor: 'rgb(54, 162, 235)',\n            fill: false,\n            data: [],\n          },\n        ],\n      });\n      const chartOptions = ref({\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            beginAtZero: false,\n          },\n        },\n      });\n  \n      // Fetch account details and transactions\n      async function fetchAccountDetailsAndTransactions() {\n        try {\n          const accountId = props.accountId;\n  \n          // Fetch account details\n          const accountResponse = await axios.get(`http://localhost:3000/accounts/${accountId}`);\n          const accountDetails = accountResponse.data;\n  \n          // Fetch transactions for the account\n          const transactionsResponse = await axios.get(`http://localhost:3000/accounts/${accountId}/transactions`);\n          const transactions = transactionsResponse.data;\n  \n          updateChartData(accountDetails, transactions);\n        } catch (error) {\n          console.error('Erreur lors de la récupération des données', error);\n          // Handle error, show user-friendly message if needed\n        }\n      }\n  \n      // Watch for changes in props.accountId\n      watchEffect(() => {\n        if (props.accountId) {\n          fetchAccountDetailsAndTransactions();\n        }\n      });\n  \n      function updateChartData(accountDetails, transactions) {\n        // Clear existing data\n        chartData.value.labels = [];\n        chartData.value.datasets[0].data = []; // Dépenses\n        chartData.value.datasets[1].data = []; // Revenus\n        chartData.value.datasets[2].data = []; // Solde\n  \n        let totalExpenses = 0;\n        let totalRevenues = 0;\n        let balance = 0;\n  \n        transactions.forEach((transaction) => {\n          let transactionDate = new Date(transaction.date).toLocaleDateString('fr-FR');\n          chartData.value.labels.push(transactionDate);\n  \n          if (transaction.category === 'Dépense') {\n            totalExpenses += Math.abs(transaction.amount); // Les dépenses sont négatives\n            balance += transaction.amount;\n          } else {\n            totalRevenues += transaction.amount;\n            balance += transaction.amount;\n          }\n  \n          chartData.value.datasets[0].data.push(totalExpenses);\n          chartData.value.datasets[1].data.push(totalRevenues);\n          chartData.value.datasets[2].data.push(balance);\n        });\n      }\n  \n      return {\n        chartData,\n        chartOptions,\n      };\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Add your styles here */\n  </style>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}