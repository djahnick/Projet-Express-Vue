{"ast":null,"code":"import { ref, onMounted, watchEffect } from 'vue';\nimport axios from 'axios';\nimport { Chart, registerables } from 'chart.js';\nexport default {\n  name: 'TransactionList',\n  props: {\n    accountId: Number\n  },\n  setup(props) {\n    const transactions = ref([]);\n    const chartRef = ref(null);\n    let chartInstance = null;\n    const fetchTransactions = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/accounts/${props.accountId}/transactions`);\n        transactions.value = response.data;\n        prepareChartData();\n      } catch (error) {\n        console.error('Erreur lors de la récupération des transactions', error);\n      }\n    };\n    const prepareChartData = () => {\n      if (chartInstance) {\n        chartInstance.destroy(); // Destroy the old chart instance if it exists\n      }\n\n      const chartData = {\n        labels: transactions.value.map(t => t.date),\n        datasets: [{\n          label: 'Transactions',\n          data: transactions.value.map(t => t.amount)\n          // ...other dataset configurations...\n        }]\n      };\n\n      const chartOptions = {\n        responsive: true,\n        maintainAspectRatio: false\n        // ...other options...\n      };\n\n      chartInstance = new Chart(chartRef.value, {\n        type: 'line',\n        data: chartData,\n        options: chartOptions\n      });\n    };\n    watchEffect(() => {\n      if (props.accountId) {\n        fetchTransactions();\n      }\n    });\n    onMounted(() => {\n      Chart.register(...registerables);\n    });\n    const formatDate = date => {\n      return new Date(date).toLocaleDateString('fr-FR');\n    };\n    const formatAmount = amount => {\n      return new Intl.NumberFormat('fr-FR', {\n        style: 'currency',\n        currency: 'EUR'\n      }).format(amount);\n    };\n\n    // Expose your methods to the template\n    return {\n      transactions,\n      chartRef,\n      formatDate,\n      formatAmount\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","watchEffect","axios","Chart","registerables","name","props","accountId","Number","setup","transactions","chartRef","chartInstance","fetchTransactions","response","get","value","data","prepareChartData","error","console","destroy","chartData","labels","map","t","date","datasets","label","amount","chartOptions","responsive","maintainAspectRatio","type","options","register","formatDate","Date","toLocaleDateString","formatAmount","Intl","NumberFormat","style","currency","format"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/components/TransactionList.vue"],"sourcesContent":["<template>\n  <div class=\"container mx-auto p-4\">\n    <h2 class=\"text-2xl font-semibold mb-4\">Transactions</h2>\n    <!-- ... le reste de votre template ... -->\n    <div class=\"mt-8\">\n      <canvas ref=\"chartRef\"></canvas>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watchEffect } from 'vue';\nimport axios from 'axios';\nimport { Chart, registerables } from 'chart.js';\n\nexport default {\n  name: 'TransactionList',\n  props: {\n    accountId: Number,\n  },\n  setup(props) {\n    const transactions = ref([]);\n    const chartRef = ref(null);\n    let chartInstance = null;\n\n    const fetchTransactions = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/accounts/${props.accountId}/transactions`);\n        transactions.value = response.data;\n        prepareChartData();\n      } catch (error) {\n        console.error('Erreur lors de la récupération des transactions', error);\n      }\n    };\n\n    const prepareChartData = () => {\n      if (chartInstance) {\n        chartInstance.destroy(); // Destroy the old chart instance if it exists\n      }\n      \n      const chartData = {\n        labels: transactions.value.map(t => t.date),\n        datasets: [{\n          label: 'Transactions',\n          data: transactions.value.map(t => t.amount),\n          // ...other dataset configurations...\n        }],\n      };\n      \n      const chartOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        // ...other options...\n      };\n\n      chartInstance = new Chart(chartRef.value, {\n        type: 'line',\n        data: chartData,\n        options: chartOptions,\n      });\n    };\n\n    watchEffect(() => {\n      if (props.accountId) {\n        fetchTransactions();\n      }\n    });\n\n    onMounted(() => {\n      Chart.register(...registerables);\n    });\n\n    const formatDate = (date) => {\n      return new Date(date).toLocaleDateString('fr-FR');\n    };\n\n    const formatAmount = (amount) => {\n      return new Intl.NumberFormat('fr-FR', { style: 'currency', currency: 'EUR' }).format(amount);\n    };\n\n    // Expose your methods to the template\n    return {\n      transactions,\n      chartRef,\n      formatDate,\n      formatAmount\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* Tailwind classes are handling all the styling needs. If you have custom styles, you can add them here */\n</style>\n"],"mappings":"AAWA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAU,QAAS,KAAK;AACjD,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,KAAK,EAAEC,aAAY,QAAS,UAAU;AAE/C,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,SAAS,EAAEC;EACb,CAAC;EACDC,KAAKA,CAACH,KAAK,EAAE;IACX,MAAMI,YAAW,GAAIX,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMY,QAAO,GAAIZ,GAAG,CAAC,IAAI,CAAC;IAC1B,IAAIa,aAAY,GAAI,IAAI;IAExB,MAAMC,iBAAgB,GAAI,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAE,kCAAiCT,KAAK,CAACC,SAAU,eAAc,CAAC;QAClGG,YAAY,CAACM,KAAI,GAAIF,QAAQ,CAACG,IAAI;QAClCC,gBAAgB,CAAC,CAAC;MACpB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACzE;IACF,CAAC;IAED,MAAMD,gBAAe,GAAIA,CAAA,KAAM;MAC7B,IAAIN,aAAa,EAAE;QACjBA,aAAa,CAACS,OAAO,CAAC,CAAC,EAAE;MAC3B;;MAEA,MAAMC,SAAQ,GAAI;QAChBC,MAAM,EAAEb,YAAY,CAACM,KAAK,CAACQ,GAAG,CAACC,CAAA,IAAKA,CAAC,CAACC,IAAI,CAAC;QAC3CC,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,cAAc;UACrBX,IAAI,EAAEP,YAAY,CAACM,KAAK,CAACQ,GAAG,CAACC,CAAA,IAAKA,CAAC,CAACI,MAAM;UAC1C;QACF,CAAC;MACH,CAAC;;MAED,MAAMC,YAAW,GAAI;QACnBC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE;QACrB;MACF,CAAC;;MAEDpB,aAAY,GAAI,IAAIT,KAAK,CAACQ,QAAQ,CAACK,KAAK,EAAE;QACxCiB,IAAI,EAAE,MAAM;QACZhB,IAAI,EAAEK,SAAS;QACfY,OAAO,EAAEJ;MACX,CAAC,CAAC;IACJ,CAAC;IAED7B,WAAW,CAAC,MAAM;MAChB,IAAIK,KAAK,CAACC,SAAS,EAAE;QACnBM,iBAAiB,CAAC,CAAC;MACrB;IACF,CAAC,CAAC;IAEFb,SAAS,CAAC,MAAM;MACdG,KAAK,CAACgC,QAAQ,CAAC,GAAG/B,aAAa,CAAC;IAClC,CAAC,CAAC;IAEF,MAAMgC,UAAS,GAAKV,IAAI,IAAK;MAC3B,OAAO,IAAIW,IAAI,CAACX,IAAI,CAAC,CAACY,kBAAkB,CAAC,OAAO,CAAC;IACnD,CAAC;IAED,MAAMC,YAAW,GAAKV,MAAM,IAAK;MAC/B,OAAO,IAAIW,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;QAAEC,KAAK,EAAE,UAAU;QAAEC,QAAQ,EAAE;MAAM,CAAC,CAAC,CAACC,MAAM,CAACf,MAAM,CAAC;IAC9F,CAAC;;IAED;IACA,OAAO;MACLnB,YAAY;MACZC,QAAQ;MACRyB,UAAU;MACVG;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}