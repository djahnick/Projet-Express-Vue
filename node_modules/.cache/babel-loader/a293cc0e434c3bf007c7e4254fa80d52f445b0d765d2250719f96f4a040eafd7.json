{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watchEffect } from 'vue';\nimport { LineChart } from 'vue-chart-3';\nimport { Chart, registerables } from 'chart.js';\nimport axios from 'axios';\nChart.register(...registerables);\nexport default {\n  components: {\n    LineChart\n  },\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const chartData = ref({\n      labels: [],\n      datasets: [{\n        label: 'Solde Initial',\n        backgroundColor: 'rgba(54, 162, 235, 0.5)',\n        borderColor: 'rgb(54, 162, 235)',\n        fill: false,\n        data: []\n      }, {\n        label: 'Solde Actuel',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n        borderColor: 'rgb(255, 99, 132)',\n        fill: false,\n        data: []\n      }, {\n        label: 'Total Dépenses',\n        backgroundColor: 'rgba(255, 255, 0, 0.5)',\n        borderColor: 'rgb(255, 255, 0)',\n        fill: false,\n        data: []\n      }, {\n        label: 'Total Revenus',\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n        borderColor: 'rgb(75, 192, 192)',\n        fill: false,\n        data: []\n      }, {\n        label: '% Changement par rapport au Solde Initial',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        borderColor: 'rgb(0, 0, 0)',\n        fill: false,\n        data: [],\n        yAxisID: 'percentage' // Utilisation d'un axe Y différent\n      }]\n    });\n\n    const chartOptions = ref({\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        y: {\n          beginAtZero: false\n        },\n        percentage: {\n          // Configuration de l'axe Y pour le pourcentage\n          beginAtZero: true,\n          max: 100,\n          // Vous pouvez ajuster la valeur maximale selon vos besoins\n          position: 'right',\n          // Position de l'axe Y pour le pourcentage\n          title: {\n            display: true,\n            text: '%' // Libellé de l'axe Y pour le pourcentage\n          }\n        }\n      },\n\n      plugins: {\n        tooltip: {\n          enabled: true,\n          mode: 'nearest',\n          intersect: false\n        }\n      }\n    });\n    async function fetchAccountDetailsAndTransactions() {\n      try {\n        const accountId = props.accountId;\n        const accountResponse = await axios.get(`http://localhost:3000/accounts/${accountId}`);\n        const accountDetails = accountResponse.data;\n        const transactionsResponse = await axios.get(`http://localhost:3000/accounts/${accountId}/transactions`);\n        const transactions = transactionsResponse.data;\n\n        // Tri des transactions par date\n        transactions.sort((a, b) => new Date(a.date) - new Date(b.date));\n        updateChartData(accountDetails, transactions);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données', error);\n      }\n    }\n    watchEffect(() => {\n      if (props.accountId) {\n        fetchAccountDetailsAndTransactions();\n      }\n    });\n    function updateChartData(accountDetails, transactions) {\n      chartData.value.labels = [];\n      chartData.value.datasets[0].data = []; // Solde Initial\n      chartData.value.datasets[1].data = []; // Solde Actuel\n      chartData.value.datasets[2].data = []; // Total Dépenses\n      chartData.value.datasets[3].data = []; // Total Revenus\n      chartData.value.datasets[4].data = []; // % Changement par rapport au Solde Initial\n\n      let currentBalance = accountDetails.initialBalance;\n      let totalExpenses = 0;\n      let totalRevenues = 0;\n      transactions.forEach(transaction => {\n        const transactionDate = new Date(transaction.date).toLocaleDateString('fr-FR');\n        const amount = transaction.amount;\n        if (transaction.category.toLowerCase() === 'dépense') {\n          totalExpenses += Math.abs(amount);\n          currentBalance -= amount;\n        } else if (transaction.category.toLowerCase() === 'revenu') {\n          totalRevenues += amount;\n          currentBalance += amount;\n        }\n        const percentageChange = ((currentBalance - accountDetails.initialBalance) / accountDetails.initialBalance * 100).toFixed(2);\n        chartData.value.labels.push(transactionDate);\n        chartData.value.datasets[0].data.push(accountDetails.initialBalance);\n        chartData.value.datasets[1].data.push(currentBalance);\n        chartData.value.datasets[2].data.push(totalExpenses);\n        chartData.value.datasets[3].data.push(totalRevenues);\n        chartData.value.datasets[4].data.push(percentageChange);\n      });\n    }\n    return {\n      chartData,\n      chartOptions\n    };\n  }\n};","map":{"version":3,"names":["ref","watchEffect","LineChart","Chart","registerables","axios","register","components","props","accountId","type","Number","required","setup","chartData","labels","datasets","label","backgroundColor","borderColor","fill","data","yAxisID","chartOptions","responsive","maintainAspectRatio","scales","y","beginAtZero","percentage","max","position","title","display","text","plugins","tooltip","enabled","mode","intersect","fetchAccountDetailsAndTransactions","accountResponse","get","accountDetails","transactionsResponse","transactions","sort","a","b","Date","date","updateChartData","error","console","value","currentBalance","initialBalance","totalExpenses","totalRevenues","forEach","transaction","transactionDate","toLocaleDateString","amount","category","toLowerCase","Math","abs","percentageChange","toFixed","push"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/components/AccountChart.vue"],"sourcesContent":["<template>\n  <div>\n    <line-chart :chart-data=\"chartData\" :options=\"chartOptions\" />\n  </div>\n</template>\n\n<script>\nimport { ref, watchEffect } from 'vue';\nimport { LineChart } from 'vue-chart-3';\nimport { Chart, registerables } from 'chart.js';\nimport axios from 'axios';\n\nChart.register(...registerables);\n\nexport default {\n  components: {\n    LineChart,\n  },\n  props: {\n    accountId: {\n      type: Number,\n      required: true,\n    },\n  },\n  setup(props) {\n    const chartData = ref({\n      labels: [],\n      datasets: [\n        {\n          label: 'Solde Initial',\n          backgroundColor: 'rgba(54, 162, 235, 0.5)',\n          borderColor: 'rgb(54, 162, 235)',\n          fill: false,\n          data: [],\n        },\n        {\n          label: 'Solde Actuel',\n          backgroundColor: 'rgba(255, 99, 132, 0.5)',\n          borderColor: 'rgb(255, 99, 132)',\n          fill: false,\n          data: [],\n        },\n        {\n          label: 'Total Dépenses',\n          backgroundColor: 'rgba(255, 255, 0, 0.5)',\n          borderColor: 'rgb(255, 255, 0)',\n          fill: false,\n          data: [],\n        },\n        {\n          label: 'Total Revenus',\n          backgroundColor: 'rgba(75, 192, 192, 0.5)',\n          borderColor: 'rgb(75, 192, 192)',\n          fill: false,\n          data: [],\n        },\n        {\n          label: '% Changement par rapport au Solde Initial',\n          backgroundColor: 'rgba(0, 0, 0, 0.5)',\n          borderColor: 'rgb(0, 0, 0)',\n          fill: false,\n          data: [],\n          yAxisID: 'percentage', // Utilisation d'un axe Y différent\n        },\n      ],\n    });\n\n    const chartOptions = ref({\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        y: {\n          beginAtZero: false,\n        },\n        percentage: { // Configuration de l'axe Y pour le pourcentage\n          beginAtZero: true,\n          max: 100, // Vous pouvez ajuster la valeur maximale selon vos besoins\n          position: 'right', // Position de l'axe Y pour le pourcentage\n          title: {\n            display: true,\n            text: '%', // Libellé de l'axe Y pour le pourcentage\n          },\n        },\n      },\n      plugins: {\n        tooltip: {\n          enabled: true,\n          mode: 'nearest',\n          intersect: false,\n        },\n      },\n    });\n\n    async function fetchAccountDetailsAndTransactions() {\n      try {\n        const accountId = props.accountId;\n\n        const accountResponse = await axios.get(`http://localhost:3000/accounts/${accountId}`);\n        const accountDetails = accountResponse.data;\n\n        const transactionsResponse = await axios.get(`http://localhost:3000/accounts/${accountId}/transactions`);\n        const transactions = transactionsResponse.data;\n\n        // Tri des transactions par date\n        transactions.sort((a, b) => new Date(a.date) - new Date(b.date));\n\n        updateChartData(accountDetails, transactions);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données', error);\n      }\n    }\n\n    watchEffect(() => {\n      if (props.accountId) {\n        fetchAccountDetailsAndTransactions();\n      }\n    });\n\n    function updateChartData(accountDetails, transactions) {\n      chartData.value.labels = [];\n      chartData.value.datasets[0].data = []; // Solde Initial\n      chartData.value.datasets[1].data = []; // Solde Actuel\n      chartData.value.datasets[2].data = []; // Total Dépenses\n      chartData.value.datasets[3].data = []; // Total Revenus\n      chartData.value.datasets[4].data = []; // % Changement par rapport au Solde Initial\n\n      let currentBalance = accountDetails.initialBalance;\n      let totalExpenses = 0;\n      let totalRevenues = 0;\n\n      transactions.forEach(transaction => {\n        const transactionDate = new Date(transaction.date).toLocaleDateString('fr-FR');\n        const amount = transaction.amount;\n\n        if (transaction.category.toLowerCase() === 'dépense') {\n          totalExpenses += Math.abs(amount);\n          currentBalance -= amount;\n        } else if (transaction.category.toLowerCase() === 'revenu') {\n          totalRevenues += amount;\n          currentBalance += amount;\n        }\n\n        const percentageChange = (((currentBalance - accountDetails.initialBalance) / accountDetails.initialBalance) * 100).toFixed(2);\n\n        chartData.value.labels.push(transactionDate);\n        chartData.value.datasets[0].data.push(accountDetails.initialBalance);\n        chartData.value.datasets[1].data.push(currentBalance);\n        chartData.value.datasets[2].data.push(totalExpenses);\n        chartData.value.datasets[3].data.push(totalRevenues);\n        chartData.value.datasets[4].data.push(percentageChange);\n      });\n    }\n\n    return {\n      chartData,\n      chartOptions,\n    };\n  },\n};\n</script>\n\n<style scoped>\n/* Ajoutez vos styles ici */\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}