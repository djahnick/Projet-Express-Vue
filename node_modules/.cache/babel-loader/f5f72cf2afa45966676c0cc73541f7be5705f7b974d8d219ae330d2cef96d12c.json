{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'TransactionList',\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      transactions: []\n    };\n  },\n  created() {\n    this.fetchTransactions();\n  },\n  methods: {\n    async fetchTransactions() {\n      try {\n        const response = await axios.get(`http://localhost:3000/accounts/${this.accountId}/transactions`);\n        this.transactions = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des transactions', error);\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString('fr-FR');\n    },\n    formatAmount(amount) {\n      return new Intl.NumberFormat('fr-FR', {\n        style: 'currency',\n        currency: 'EUR'\n      }).format(amount);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","accountId","type","Number","required","data","transactions","created","fetchTransactions","methods","response","get","error","console","formatDate","date","Date","toLocaleDateString","formatAmount","amount","Intl","NumberFormat","style","currency","format"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/components/TransactionList.vue"],"sourcesContent":["<template>\n  <div>\n    <h2 class=\"text-2xl font-semibold mb-4\">Transactions</h2>\n    <div v-if=\"transactions.length\" class=\"bg-white shadow-md rounded-lg overflow-hidden\">\n      <ul>\n        <li v-for=\"transaction in transactions\" :key=\"transaction.id\" class=\"px-6 py-4 border-b hover:bg-gray-100\">\n          <div class=\"flex justify-between items-center\">\n            <!-- Display income transactions -->\n            <div v-if=\"transaction.category === 'revenu'\" class=\"flex items-center space-x-4\">\n              <span class=\"text-green-500\">{{ transaction.description }}</span>\n              <div class=\"flex-1\">\n                <p>{{ formatDate(transaction.date) }}</p>\n              </div>\n              <span class=\"text-green-500\">{{ formatAmount(transaction.amount) }}</span>\n            </div>\n            <!-- Display expense transactions -->\n            <div v-if=\"transaction.category === 'dépense'\" class=\"flex items-center justify-end space-x-4\">\n              <span class=\"text-red-500\">{{ formatAmount(transaction.amount) }}</span>\n              <div class=\"flex-1 text-right\">\n                <p>{{ transaction.description }}</p>\n                <p>{{ formatDate(transaction.date) }}</p>\n              </div>\n            </div>\n          </div>\n        </li>\n      </ul>\n    </div>\n    <div v-else class=\"text-center py-4\">\n      <p>Aucune transaction disponible.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'TransactionList',\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      transactions: []\n    };\n  },\n  created() {\n    this.fetchTransactions();\n  },\n  methods: {\n    async fetchTransactions() {\n      try {\n        const response = await axios.get(`http://localhost:3000/accounts/${this.accountId}/transactions`);\n        this.transactions = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des transactions', error);\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString('fr-FR');\n    },\n    formatAmount(amount) {\n      return new Intl.NumberFormat('fr-FR', { style: 'currency', currency: 'EUR' }).format(amount);\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Tailwind classes are already in use, you might want to add custom styles if needed */\n</style>\n"],"mappings":"AAkCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAE,kCAAiC,IAAI,CAACV,SAAU,eAAc,CAAC;QACjG,IAAI,CAACK,YAAW,GAAII,QAAQ,CAACL,IAAI;MACnC,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACzE;IACF,CAAC;IACDE,UAAUA,CAACC,IAAI,EAAE;MACf,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,kBAAkB,CAAC,OAAO,CAAC;IACnD,CAAC;IACDC,YAAYA,CAACC,MAAM,EAAE;MACnB,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;QAAEC,KAAK,EAAE,UAAU;QAAEC,QAAQ,EAAE;MAAM,CAAC,CAAC,CAACC,MAAM,CAACL,MAAM,CAAC;IAC9F;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}