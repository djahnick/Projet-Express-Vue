{"ast":null,"code":"import axios from 'axios';\nimport { ref, onMounted } from 'vue';\nexport default {\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const revenueTotal = ref(0);\n    const expenseTotal = ref(0);\n    const balanceTotal = ref(0);\n    const fetchTransactions = async () => {\n      try {\n        const response = await axios.get(`/accounts/${props.accountId}/transactions`);\n        calculateTotals(response.data);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des transactions\", error);\n      }\n    };\n    const calculateTotals = transactions => {\n      transactions.forEach(transaction => {\n        if (transaction.amount >= 0) {\n          revenueTotal.value += transaction.amount;\n        } else {\n          expenseTotal.value += Math.abs(transaction.amount);\n        }\n      });\n\n      // Supposant que le solde initial est la somme des revenus moins les dépenses\n      balanceTotal.value = revenueTotal.value - expenseTotal.value;\n    };\n    onMounted(() => {\n      fetchTransactions();\n    });\n    return {\n      revenueTotal,\n      expenseTotal,\n      balanceTotal\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","onMounted","props","accountId","type","Number","required","setup","revenueTotal","expenseTotal","balanceTotal","fetchTransactions","response","get","calculateTotals","data","error","console","transactions","forEach","transaction","amount","value","Math","abs"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/components/TransactionList.vue"],"sourcesContent":["<template>\n  <div>\n    <h3>Détails du compte</h3>\n    <p>Revenus totaux: {{ revenueTotal }}</p>\n    <p>Dépenses totales: {{ expenseTotal }}</p>\n    <p>Solde total: {{ balanceTotal }}</p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ref, onMounted } from 'vue';\n\nexport default {\n  props: {\n    accountId: {\n      type: Number,\n      required: true,\n    },\n  },\n  setup(props) {\n    const revenueTotal = ref(0);\n    const expenseTotal = ref(0);\n    const balanceTotal = ref(0);\n\n    const fetchTransactions = async () => {\n      try {\n        const response = await axios.get(`/accounts/${props.accountId}/transactions`);\n        calculateTotals(response.data);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des transactions\", error);\n      }\n    };\n\n    const calculateTotals = (transactions) => {\n      transactions.forEach(transaction => {\n        if (transaction.amount >= 0) {\n          revenueTotal.value += transaction.amount;\n        } else {\n          expenseTotal.value += Math.abs(transaction.amount);\n        }\n      });\n\n      // Supposant que le solde initial est la somme des revenus moins les dépenses\n      balanceTotal.value = revenueTotal.value - expenseTotal.value;\n    };\n\n    onMounted(() => {\n      fetchTransactions();\n    });\n\n    return {\n      revenueTotal,\n      expenseTotal,\n      balanceTotal,\n    };\n  },\n};\n</script>\n"],"mappings":"AAUA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AAEpC,eAAe;EACbC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,KAAKA,CAACL,KAAK,EAAE;IACX,MAAMM,YAAW,GAAIR,GAAG,CAAC,CAAC,CAAC;IAC3B,MAAMS,YAAW,GAAIT,GAAG,CAAC,CAAC,CAAC;IAC3B,MAAMU,YAAW,GAAIV,GAAG,CAAC,CAAC,CAAC;IAE3B,MAAMW,iBAAgB,GAAI,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAE,aAAYX,KAAK,CAACC,SAAU,eAAc,CAAC;QAC7EW,eAAe,CAACF,QAAQ,CAACG,IAAI,CAAC;MAChC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACzE;IACF,CAAC;IAED,MAAMF,eAAc,GAAKI,YAAY,IAAK;MACxCA,YAAY,CAACC,OAAO,CAACC,WAAU,IAAK;QAClC,IAAIA,WAAW,CAACC,MAAK,IAAK,CAAC,EAAE;UAC3Bb,YAAY,CAACc,KAAI,IAAKF,WAAW,CAACC,MAAM;QAC1C,OAAO;UACLZ,YAAY,CAACa,KAAI,IAAKC,IAAI,CAACC,GAAG,CAACJ,WAAW,CAACC,MAAM,CAAC;QACpD;MACF,CAAC,CAAC;;MAEF;MACAX,YAAY,CAACY,KAAI,GAAId,YAAY,CAACc,KAAI,GAAIb,YAAY,CAACa,KAAK;IAC9D,CAAC;IAEDrB,SAAS,CAAC,MAAM;MACdU,iBAAiB,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF,OAAO;MACLH,YAAY;MACZC,YAAY;MACZC;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}