{"ast":null,"code":"import axios from 'axios';\nimport { defineComponent, ref, watch } from 'vue';\nimport { Line } from 'vue-chart-3';\nimport { Chart as ChartJS, Title, Tooltip, LineElement, Legend, CategoryScale, LinearScale, PointElement } from 'chart.js';\n\n// Register the components required by Chart.js\nChartJS.register(Title, Tooltip, LineElement, Legend, CategoryScale, LinearScale, PointElement);\nexport default defineComponent({\n  name: 'TransactionList',\n  components: {\n    LineChart: Line\n  },\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      transactions: [],\n      chartData: null,\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    };\n  },\n  watch: {\n    accountId: {\n      immediate: true,\n      handler(newVal, oldVal) {\n        if (newVal !== oldVal) {\n          this.fetchTransactions();\n        }\n      }\n    },\n    transactions: {\n      deep: true,\n      handler() {\n        this.buildChartData();\n      }\n    }\n  },\n  mounted() {\n    this.fetchTransactions();\n  },\n  methods: {\n    async fetchTransactions() {\n      try {\n        const response = await axios.get(`http://localhost:3000/accounts/${this.accountId}/transactions`);\n        this.transactions = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des transactions', error);\n      }\n    },\n    buildChartData() {\n      const sortedTransactions = this.transactions.sort((a, b) => new Date(a.date) - new Date(b.date));\n      this.chartData = {\n        labels: sortedTransactions.map(t => this.formatDate(t.date)),\n        datasets: [{\n          label: 'Dépenses',\n          backgroundColor: 'rgb(255, 99, 132)',\n          borderColor: 'rgb(255, 99, 132)',\n          data: sortedTransactions.map(t => t.category === 'dépense' ? t.amount : 0),\n          fill: false\n        }]\n      };\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString('fr-FR');\n    },\n    formatAmount(amount) {\n      return new Intl.NumberFormat('fr-FR', {\n        style: 'currency',\n        currency: 'EUR'\n      }).format(amount);\n    }\n  }\n});","map":{"version":3,"names":["axios","defineComponent","ref","watch","Line","Chart","ChartJS","Title","Tooltip","LineElement","Legend","CategoryScale","LinearScale","PointElement","register","name","components","LineChart","props","accountId","type","Number","required","data","transactions","chartData","chartOptions","responsive","maintainAspectRatio","scales","y","beginAtZero","immediate","handler","newVal","oldVal","fetchTransactions","deep","buildChartData","mounted","methods","response","get","error","console","sortedTransactions","sort","a","b","Date","date","labels","map","t","formatDate","datasets","label","backgroundColor","borderColor","category","amount","fill","toLocaleDateString","formatAmount","Intl","NumberFormat","style","currency","format"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/components/TransactionList.vue"],"sourcesContent":["<template>\n  <div class=\"container mx-auto p-4\">\n    <h2 class=\"text-2xl font-semibold mb-4\">Transactions</h2>\n    <ul v-if=\"transactions.length\" class=\"bg-white shadow-md rounded-lg overflow-hidden\">\n      <li v-for=\"transaction in transactions\" :key=\"transaction.id\" class=\"px-6 py-4 border-b hover:bg-gray-100\">\n        <div class=\"flex justify-between items-center\">\n          <!-- Section pour Revenus -->\n          <div v-if=\"transaction.category === 'revenu'\" class=\"flex items-center space-x-4\">\n            <span class=\"p-2 inline-flex items-center justify-center text-green-500\">\n              <i class=\"fas fa-arrow-down\"></i> <!-- Icone de revenu -->\n            </span>\n            <div class=\"flex-1\">\n              <p class=\"text-sm font-semibold text-gray-600\">Revenu</p>\n              <p class=\"text-gray-800\">{{ transaction.description }}</p>\n              <p class=\"text-gray-500 text-xs\">{{ formatDate(transaction.date) }}</p>\n            </div>\n            <span class=\"text-green-500 font-semibold\">{{ formatAmount(transaction.amount) }}</span>\n          </div>\n          \n          <!-- Placeholder quand il n'y a pas de revenu -->\n          <div v-else class=\"flex-1\"></div>\n          \n          <!-- Section pour Dépenses -->\n          <div v-if=\"transaction.category === 'dépense'\" class=\"flex items-center justify-end space-x-4\">\n            <span class=\"text-red-500 font-semibold\">{{ formatAmount(transaction.amount) }}</span>\n            <div class=\"flex-1 text-right\">\n              <p class=\"text-sm font-semibold text-gray-600\">Dépense</p>\n              <p class=\"text-gray-800\">{{ transaction.description }}</p>\n              <p class=\"text-gray-500 text-xs\">{{ formatDate(transaction.date) }}</p>\n            </div>\n            <span class=\"p-2 inline-flex items-center justify-center text-red-500\">\n              <i class=\"fas fa-arrow-up\"></i> <!-- Icone de dépense -->\n            </span>\n          </div>\n          \n          <!-- Placeholder quand il n'y a pas de dépense -->\n          <div v-else class=\"text-red-500\"></div>\n        </div>\n      </li>\n    </ul>\n    <div v-else class=\"text-center py-4\">\n      <p>Aucune transaction disponible.</p>\n    </div>\n    <div class=\"mt-8\">\n      <line-chart :chart-data=\"chartData\" :options=\"chartOptions\"></line-chart>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\nimport { defineComponent, ref, watch } from 'vue';\nimport { Line } from 'vue-chart-3';\nimport { Chart as ChartJS, Title, Tooltip, LineElement, Legend, CategoryScale, LinearScale, PointElement } from 'chart.js';\n\n// Register the components required by Chart.js\nChartJS.register(Title, Tooltip, LineElement, Legend, CategoryScale, LinearScale, PointElement);\n\nexport default defineComponent({\n  name: 'TransactionList',\n  components: {\n    LineChart: Line\n  },\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      transactions: [],\n      chartData: null,\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    };\n  },\n  watch: {\n    accountId: {\n      immediate: true,\n      handler(newVal, oldVal) {\n        if (newVal !== oldVal) {\n          this.fetchTransactions();\n        }\n      }\n    },\n    transactions: {\n      deep: true,\n      handler() {\n        this.buildChartData();\n      }\n    }\n  },\n  mounted() {\n    this.fetchTransactions();\n  },\n  methods: {\n    async fetchTransactions() {\n      try {\n        const response = await axios.get(`http://localhost:3000/accounts/${this.accountId}/transactions`);\n        this.transactions = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des transactions', error);\n      }\n    },\n    buildChartData() {\n      const sortedTransactions = this.transactions.sort((a, b) => new Date(a.date) - new Date(b.date));\n      this.chartData = {\n        labels: sortedTransactions.map(t => this.formatDate(t.date)),\n        datasets: [{\n          label: 'Dépenses',\n          backgroundColor: 'rgb(255, 99, 132)',\n          borderColor: 'rgb(255, 99, 132)',\n          data: sortedTransactions.map(t => t.category === 'dépense' ? t.amount : 0),\n          fill: false,\n        }]\n      };\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString('fr-FR');\n    },\n    formatAmount(amount) {\n      return new Intl.NumberFormat('fr-FR', { style: 'currency', currency: 'EUR' }).format(amount);\n    }\n  }\n});\n</script>\n\n<style scoped>\n/* Tailwind classes are handling all the styling needs. If you have custom styles, you can add them here */\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}