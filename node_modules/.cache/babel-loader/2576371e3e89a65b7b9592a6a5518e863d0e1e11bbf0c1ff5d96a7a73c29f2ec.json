{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'TransactionList',\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    },\n    balance: Number // Ajoutez cette ligne\n  },\n\n  data() {\n    return {\n      transactions: [],\n      isEditing: false,\n      transactionToEdit: null\n    };\n  },\n  watch: {\n    accountId: {\n      immediate: true,\n      handler() {\n        this.fetchTransactions();\n      }\n    }\n  },\n  methods: {\n    async fetchTransactions() {\n      try {\n        const response = await axios.get(`http://localhost:3000/accounts/${this.accountId}/transactions`);\n        this.transactions = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des transactions', error);\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString('fr-FR');\n    },\n    formatAmount(amount) {\n      return new Intl.NumberFormat('fr-FR', {\n        style: 'currency',\n        currency: 'EUR'\n      }).format(amount);\n    },\n    async deleteTransaction(transactionId) {\n      try {\n        // Envoyez une requête DELETE pour supprimer la transaction\n        await axios.delete(`http://localhost:3000/transactions/${transactionId}`);\n\n        // Obtenez la transaction supprimée\n        const deletedTransaction = this.transactions.find(t => t.id === transactionId);\n\n        // Mettez à jour le solde en fonction de la catégorie de la transaction supprimée\n        if (deletedTransaction.category === 'revenu') {\n          this.accountDetails.balance -= deletedTransaction.amount;\n        } else if (deletedTransaction.category === 'dépense') {\n          this.accountDetails.balance += deletedTransaction.amount;\n        }\n\n        // Rafraîchissez la liste des transactions après suppression\n        await this.fetchTransactions();\n      } catch (error) {\n        console.error('Erreur lors de la suppression de la transaction', error);\n        // Gérez l'erreur et affichez un message convivial à l'utilisateur si nécessaire\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","accountId","type","Number","required","balance","data","transactions","isEditing","transactionToEdit","watch","immediate","handler","fetchTransactions","methods","response","get","error","console","formatDate","date","Date","toLocaleDateString","formatAmount","amount","Intl","NumberFormat","style","currency","format","deleteTransaction","transactionId","delete","deletedTransaction","find","t","id","category","accountDetails"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/components/TransactionList.vue"],"sourcesContent":["<template>\n  <div v-if=\"isEditing\" class=\"fixed inset-0 bg-black bg-opacity-50 h-full w-full flex justify-center items-center\">\n    <div class=\"bg-white p-4 rounded-lg\">\n      <form @submit.prevent=\"updateTransaction\">\n        <!-- Formulaire pour modifier la transaction -->\n        <div>\n          <label for=\"edit-description\" class=\"block text-sm font-medium text-gray-700\">Description</label>\n          <input type=\"text\" id=\"edit-description\" v-model=\"transactionToEdit.description\" class=\"mt-1 block w-full\" required>\n        </div>\n        <div class=\"mt-4\">\n          <label for=\"edit-amount\" class=\"block text-sm font-medium text-gray-700\">Montant</label>\n          <input type=\"number\" id=\"edit-amount\" v-model=\"transactionToEdit.amount\" class=\"mt-1 block w-full\" required>\n        </div>\n        <div class=\"mt-4\">\n          <label for=\"edit-date\" class=\"block text-sm font-medium text-gray-700\">Date</label>\n          <input type=\"date\" id=\"edit-date\" v-model=\"transactionToEdit.date\" class=\"mt-1 block w-full\" required>\n        </div>\n        <div class=\"mt-4 flex justify-end space-x-2\">\n          <button type=\"button\" @click=\"isEditing = false\" class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\">\n            Annuler\n          </button>\n          <button type=\"submit\" class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n            Sauvegarder\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n  <div class=\"container mx-auto p-4\">\n    <h2 class=\"text-2xl font-semibold mb-4\">Transactions</h2>\n    <ul v-if=\"transactions.length\" class=\"bg-white shadow-md rounded-lg overflow-hidden\">\n      <li v-for=\"transaction in transactions\" :key=\"transaction.id\" class=\"px-6 py-4 border-b hover:bg-gray-100\">\n        <div class=\"flex justify-between items-center\">\n          <!-- Section pour Revenus -->\n          <div v-if=\"transaction.category === 'revenu'\" class=\"flex items-center space-x-4\">\n            <span class=\"p-2 inline-flex items-center justify-center text-green-500\">\n              <i class=\"fas fa-arrow-down\"></i> <!-- Icone de revenu -->\n            </span>\n            <div class=\"flex-1\">\n              <p class=\"text-sm font-semibold text-gray-600\">Revenu</p>\n              <p class=\"text-gray-800\">{{ transaction.description }}</p>\n              <p class=\"text-gray-500 text-xs\">{{ formatDate(transaction.date) }}</p>\n            </div>\n            <span class=\"text-green-500 font-semibold\">{{ formatAmount(transaction.amount) }}</span>\n          </div>\n\n          <!-- Placeholder quand il n'y a pas de revenu -->\n          <div v-else class=\"flex-1\"></div>\n\n          <!-- Section pour Dépenses -->\n          <div v-if=\"transaction.category === 'dépense'\" class=\"flex items-center justify-end space-x-4\">\n            <span class=\"text-red-500 font-semibold\">{{ formatAmount(transaction.amount) }}</span>\n            <div class=\"flex-1 text-right\">\n              <p class=\"text-sm font-semibold text-gray-600\">Dépense</p>\n              <p class=\"text-gray-800\">{{ transaction.description }}</p>\n              <p class=\"text-gray-500 text-xs\">{{ formatDate(transaction.date) }}</p>\n            </div>\n            <span class=\"p-2 inline-flex items-center justify-center text-red-500\">\n              <i class=\"fas fa-arrow-up\"></i> <!-- Icone de dépense -->\n            </span>\n          </div>\n\n          <!-- Placeholder quand il n'y a pas de dépense -->\n          <div v-else class=\"text-red-500\"></div>\n          \n          <!-- Bouton de suppression -->\n          <div>\n            <button @click=\"deleteTransaction(transaction.id)\" class=\"text-red-500 hover:text-red-700\">\n              Supprimer\n            </button>\n          </div>\n        </div>\n      </li>\n    </ul>\n    <div v-else class=\"text-center py-4\">\n      <p>Aucune transaction disponible.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'TransactionList',\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    },\n    balance: Number, // Ajoutez cette ligne\n\n  },\n  data() {\n    return {\n      transactions: [],\n      isEditing: false,\n      transactionToEdit: null\n    };\n  },\n  watch: {\n    accountId: {\n      immediate: true,\n      handler() {\n        this.fetchTransactions();\n      }\n    }\n  },\n  methods: {\n    async fetchTransactions() {\n      try {\n        const response = await axios.get(`http://localhost:3000/accounts/${this.accountId}/transactions`);\n        this.transactions = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des transactions', error);\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString('fr-FR');\n    },\n    formatAmount(amount) {\n      return new Intl.NumberFormat('fr-FR', { style: 'currency', currency: 'EUR' }).format(amount);\n    },\n    async deleteTransaction(transactionId) {\n    try {\n      // Envoyez une requête DELETE pour supprimer la transaction\n      await axios.delete(`http://localhost:3000/transactions/${transactionId}`);\n\n      // Obtenez la transaction supprimée\n      const deletedTransaction = this.transactions.find(t => t.id === transactionId);\n\n      // Mettez à jour le solde en fonction de la catégorie de la transaction supprimée\n      if (deletedTransaction.category === 'revenu') {\n        this.accountDetails.balance -= deletedTransaction.amount;\n      } else if (deletedTransaction.category === 'dépense') {\n        this.accountDetails.balance += deletedTransaction.amount;\n      }\n\n      // Rafraîchissez la liste des transactions après suppression\n      await this.fetchTransactions();\n    } catch (error) {\n      console.error('Erreur lors de la suppression de la transaction', error);\n      // Gérez l'erreur et affichez un message convivial à l'utilisateur si nécessaire\n    }\n  }\n  }\n};\n</script>\n\n<style scoped>\n/* Vos styles CSS existants */\n</style>\n"],"mappings":"AAiFA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,OAAO,EAAEF,MAAM,CAAE;EAEnB,CAAC;;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE,KAAK;MAChBC,iBAAiB,EAAE;IACrB,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLT,SAAS,EAAE;MACTU,SAAS,EAAE,IAAI;MACfC,OAAOA,CAAA,EAAG;QACR,IAAI,CAACC,iBAAiB,CAAC,CAAC;MAC1B;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMjB,KAAK,CAACkB,GAAG,CAAE,kCAAiC,IAAI,CAACf,SAAU,eAAc,CAAC;QACjG,IAAI,CAACM,YAAW,GAAIQ,QAAQ,CAACT,IAAI;MACnC,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACzE;IACF,CAAC;IACDE,UAAUA,CAACC,IAAI,EAAE;MACf,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,kBAAkB,CAAC,OAAO,CAAC;IACnD,CAAC;IACDC,YAAYA,CAACC,MAAM,EAAE;MACnB,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;QAAEC,KAAK,EAAE,UAAU;QAAEC,QAAQ,EAAE;MAAM,CAAC,CAAC,CAACC,MAAM,CAACL,MAAM,CAAC;IAC9F,CAAC;IACD,MAAMM,iBAAiBA,CAACC,aAAa,EAAE;MACvC,IAAI;QACF;QACA,MAAMjC,KAAK,CAACkC,MAAM,CAAE,sCAAqCD,aAAc,EAAC,CAAC;;QAEzE;QACA,MAAME,kBAAiB,GAAI,IAAI,CAAC1B,YAAY,CAAC2B,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAML,aAAa,CAAC;;QAE9E;QACA,IAAIE,kBAAkB,CAACI,QAAO,KAAM,QAAQ,EAAE;UAC5C,IAAI,CAACC,cAAc,CAACjC,OAAM,IAAK4B,kBAAkB,CAACT,MAAM;QAC1D,OAAO,IAAIS,kBAAkB,CAACI,QAAO,KAAM,SAAS,EAAE;UACpD,IAAI,CAACC,cAAc,CAACjC,OAAM,IAAK4B,kBAAkB,CAACT,MAAM;QAC1D;;QAEA;QACA,MAAM,IAAI,CAACX,iBAAiB,CAAC,CAAC;MAChC,EAAE,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;QACvE;MACF;IACF;EACA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}