{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"p-4\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-2xl font-bold mb-4\"\n}, \"Create Account\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"w-full px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-700\"\n}, \"Create Account\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.createAccount && $options.createAccount(...args), [\"prevent\"])),\n    class: \"max-w-md space-y-4\"\n  }, [_createCommentVNode(\" Form fields for account details: name, initial balance, currency, etc. \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.accountData.name = $event),\n    placeholder: \"Account Name\",\n    class: \"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring focus:border-blue-300\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.accountData.name]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.accountData.initialBalance = $event),\n    placeholder: \"Initial Balance\",\n    class: \"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring focus:border-blue-300\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.accountData.initialBalance]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.accountData.currency = $event),\n    placeholder: \"Currency\",\n    class: \"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring focus:border-blue-300\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.accountData.currency]]), _createCommentVNode(\" Add more fields as needed \"), _hoisted_3], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","createAccount","_createCommentVNode","$data","accountData","name","$event","placeholder","initialBalance","currency","_hoisted_3"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/components/AccountForm.vue"],"sourcesContent":["<template>\n  <div class=\"p-4\">\n    <h2 class=\"text-2xl font-bold mb-4\">Create Account</h2>\n    <form @submit.prevent=\"createAccount\" class=\"max-w-md space-y-4\">\n      <!-- Form fields for account details: name, initial balance, currency, etc. -->\n      <input v-model=\"accountData.name\" placeholder=\"Account Name\" class=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring focus:border-blue-300\" />\n      <input v-model=\"accountData.initialBalance\" placeholder=\"Initial Balance\" class=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring focus:border-blue-300\" />\n      <input v-model=\"accountData.currency\" placeholder=\"Currency\" class=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring focus:border-blue-300\" />\n      <!-- Add more fields as needed -->\n\n      <button type=\"submit\" class=\"w-full px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-700\">Create Account</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'AccountForm',\n  data() {\n    return {\n      accountData: {\n        name: '',\n        initialBalance: '',\n        currency: '',\n        // Add more fields here as needed\n      },\n    };\n  },\n  methods: {\n    async createAccount() {\n      try {\n        const response = await axios.post('http://localhost:3000/accounts', this.accountData);\n        // Handle success, e.g., show a success message or redirect to account list\n        console.log('Account created:', response.data);\n      } catch (error) {\n        // Handle error, e.g., show an error message\n        console.error('Error creating account:', error);\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAK;gCACdC,mBAAA,CAAuD;EAAnDD,KAAK,EAAC;AAAyB,GAAC,gBAAc;gCAQhDC,mBAAA,CAA0H;EAAlHC,IAAI,EAAC,QAAQ;EAACF,KAAK,EAAC;GAAuE,gBAAc;;;uBATrHG,mBAAA,CAWM,OAXNC,UAWM,GAVJC,UAAuD,EACvDJ,mBAAA,CAQO;IARAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;IAAET,KAAK,EAAC;MAC1CY,mBAAA,4EAA+E,E,gBAC/EX,mBAAA,CAA8J;+DAA9IY,KAAA,CAAAC,WAAW,CAACC,IAAI,GAAAC,MAAA;IAAEC,WAAW,EAAC,cAAc;IAACjB,KAAK,EAAC;iDAAnDa,KAAA,CAAAC,WAAW,CAACC,IAAI,E,mBAChCd,mBAAA,CAA2K;+DAA3JY,KAAA,CAAAC,WAAW,CAACI,cAAc,GAAAF,MAAA;IAAEC,WAAW,EAAC,iBAAiB;IAACjB,KAAK,EAAC;iDAAhEa,KAAA,CAAAC,WAAW,CAACI,cAAc,E,mBAC1CjB,mBAAA,CAA8J;+DAA9IY,KAAA,CAAAC,WAAW,CAACK,QAAQ,GAAAH,MAAA;IAAEC,WAAW,EAAC,UAAU;IAACjB,KAAK,EAAC;iDAAnDa,KAAA,CAAAC,WAAW,CAACK,QAAQ,E,GACpCP,mBAAA,+BAAkC,EAElCQ,UAA0H,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}