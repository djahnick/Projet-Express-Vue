{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watchEffect } from 'vue';\nimport { LineChart } from 'vue-chart-3';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  components: {\n    LineChart\n  },\n  props: {\n    transactions: {\n      type: Array,\n      required: true\n    }\n  },\n  setup(props) {\n    const chartData = ref({\n      labels: [],\n      datasets: [{\n        label: 'Total Dépenses',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n        borderColor: 'rgb(255, 99, 132)',\n        fill: false,\n        data: []\n      }, {\n        label: 'Total Revenus',\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n        borderColor: 'rgb(75, 192, 192)',\n        fill: false,\n        data: []\n      }, {\n        label: 'Solde',\n        backgroundColor: 'rgba(54, 162, 235, 0.5)',\n        borderColor: 'rgb(54, 162, 235)',\n        fill: false,\n        data: []\n      }]\n    });\n    const chartOptions = ref({\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        y: {\n          beginAtZero: false\n        }\n      }\n    });\n    watchEffect(() => {\n      if (props.transactions && props.transactions.length > 0) {\n        updateChartData(props.transactions);\n      }\n    });\n    function updateChartData(transactions) {\n      chartData.value.labels = [];\n      chartData.value.datasets[0].data = []; // Dépenses\n      chartData.value.datasets[1].data = []; // Revenus\n      chartData.value.datasets[2].data = []; // Solde\n      const sortedTransactions = transactions.sort((a, b) => new Date(a.date) - new Date(b.date));\n      let totalExpenses = 0;\n      let totalRevenues = 0;\n      let balance = 0;\n      sortedTransactions.forEach(transaction => {\n        let transactionDate = new Date(transaction.date).toLocaleDateString('fr-FR');\n        chartData.value.labels.push(transactionDate);\n        if (transaction.category === 'Dépense') {\n          totalExpenses += Math.abs(transaction.amount); // Les dépenses sont négatives\n          balance += transaction.amount;\n        } else {\n          totalRevenues += transaction.amount;\n          balance += transaction.amount;\n        }\n        chartData.value.datasets[0].data.push(totalExpenses);\n        chartData.value.datasets[1].data.push(totalRevenues);\n        chartData.value.datasets[2].data.push(balance);\n      });\n    }\n    return {\n      chartData,\n      chartOptions\n    };\n  }\n};","map":{"version":3,"names":["ref","watchEffect","LineChart","Chart","registerables","register","components","props","transactions","type","Array","required","setup","chartData","labels","datasets","label","backgroundColor","borderColor","fill","data","chartOptions","responsive","maintainAspectRatio","scales","y","beginAtZero","length","updateChartData","value","sortedTransactions","sort","a","b","Date","date","totalExpenses","totalRevenues","balance","forEach","transaction","transactionDate","toLocaleDateString","push","category","Math","abs","amount"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/components/AccountChart.vue"],"sourcesContent":["<template>\n    <div>\n      <line-chart :chart-data=\"chartData\" :options=\"chartOptions\" />\n    </div>\n</template>\n\n<script>\nimport { ref, watchEffect } from 'vue';\nimport { LineChart } from 'vue-chart-3';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\nexport default {\n  components: {\n    LineChart,\n  },\n  props: {\n    transactions: {\n      type: Array,\n      required: true,\n    }\n  },\n  setup(props) {\n    const chartData = ref({\n      labels: [],\n      datasets: [\n        {\n          label: 'Total Dépenses',\n          backgroundColor: 'rgba(255, 99, 132, 0.5)',\n          borderColor: 'rgb(255, 99, 132)',\n          fill: false,\n          data: []\n        },\n        {\n          label: 'Total Revenus',\n          backgroundColor: 'rgba(75, 192, 192, 0.5)',\n          borderColor: 'rgb(75, 192, 192)',\n          fill: false,\n          data: []\n        },\n        {\n          label: 'Solde',\n          backgroundColor: 'rgba(54, 162, 235, 0.5)',\n          borderColor: 'rgb(54, 162, 235)',\n          fill: false,\n          data: []\n        }\n      ]\n    });\n    const chartOptions = ref({\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        y: {\n          beginAtZero: false\n        }\n      }\n    });\n\n    watchEffect(() => {\n      if (props.transactions && props.transactions.length > 0) {\n        updateChartData(props.transactions);\n      }\n    });\n\n    function updateChartData(transactions) {\n      chartData.value.labels = [];\n      chartData.value.datasets[0].data = []; // Dépenses\n      chartData.value.datasets[1].data = []; // Revenus\n      chartData.value.datasets[2].data = []; // Solde\n      const sortedTransactions = transactions.sort((a, b) => new Date(a.date) - new Date(b.date));\n      let totalExpenses = 0;\n      let totalRevenues = 0;\n      let balance = 0;\n\n      sortedTransactions.forEach(transaction => {\n        let transactionDate = new Date(transaction.date).toLocaleDateString('fr-FR');\n        chartData.value.labels.push(transactionDate);\n\n        if (transaction.category === 'Dépense') {\n          totalExpenses += Math.abs(transaction.amount); // Les dépenses sont négatives\n          balance += transaction.amount;\n        } else {\n          totalRevenues += transaction.amount;\n          balance += transaction.amount;\n        }\n\n        chartData.value.datasets[0].data.push(totalExpenses);\n        chartData.value.datasets[1].data.push(totalRevenues);\n        chartData.value.datasets[2].data.push(balance);\n      });\n    }\n\n    return {\n      chartData,\n      chartOptions\n    };\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}