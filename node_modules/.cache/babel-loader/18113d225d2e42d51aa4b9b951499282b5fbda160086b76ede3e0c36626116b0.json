{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e1e7ce2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Détails du Compte\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TransactionForm = _resolveComponent(\"TransactionForm\");\n  const _component_TransactionList = _resolveComponent(\"TransactionList\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"p\", null, \"Nom du Compte: \" + _toDisplayString($data.accountDetails.accountName), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Solde: \" + _toDisplayString($data.accountDetails.balance) + \" \" + _toDisplayString($data.accountDetails.currency), 1 /* TEXT */), _createCommentVNode(\" Formulaire pour ajouter une transaction \"), _createVNode(_component_TransactionForm, {\n    accountId: $data.accountDetails.id,\n    onTransactionAdded: $options.fetchAccountDetails\n  }, null, 8 /* PROPS */, [\"accountId\", \"onTransactionAdded\"]), _createCommentVNode(\" Liste des transactions \"), _createVNode(_component_TransactionList, {\n    transactions: $data.accountDetails.transactions\n  }, null, 8 /* PROPS */, [\"transactions\"])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_toDisplayString","$data","accountDetails","accountName","balance","currency","_createCommentVNode","_createVNode","_component_TransactionForm","accountId","id","onTransactionAdded","$options","fetchAccountDetails","_component_TransactionList","transactions"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/views/AccountDetails.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Détails du Compte</h2>\n    <p>Nom du Compte: {{ accountDetails.accountName }}</p>\n    <p>Solde: {{ accountDetails.balance }} {{ accountDetails.currency }}</p>\n\n    <!-- Formulaire pour ajouter une transaction -->\n    <TransactionForm :accountId=\"accountDetails.id\" @transaction-added=\"fetchAccountDetails\"></TransactionForm>\n    \n    <!-- Liste des transactions -->\n    <TransactionList :transactions=\"accountDetails.transactions\"></TransactionList>\n  </div>\n</template>\n\n<script>\nimport TransactionForm from './TransactionForm.vue';\nimport TransactionList from './TransactionList.vue';\nimport axios from 'axios';\n\nexport default {\n  name: 'AccountDetails',\n  components: {\n    TransactionForm,\n    TransactionList\n  },\n  data() {\n    return {\n      accountDetails: null\n    };\n  },\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  created() {\n    this.fetchAccountDetails();\n  },\n  methods: {\n    async fetchAccountDetails() {\n      try {\n        const response = await axios.get(`http://localhost:3000/accounts/${this.accountId}`);\n        this.accountDetails = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des détails du compte', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Votre style ici si nécessaire */\n</style>\n"],"mappings":";;gEAEIA,mBAAA,CAA0B,YAAtB,mBAAiB;;;;;uBADvBC,mBAAA,CAUM,cATJC,UAA0B,EAC1BF,mBAAA,CAAsD,WAAnD,iBAAe,GAAAG,gBAAA,CAAGC,KAAA,CAAAC,cAAc,CAACC,WAAW,kBAC/CN,mBAAA,CAAwE,WAArE,SAAO,GAAAG,gBAAA,CAAGC,KAAA,CAAAC,cAAc,CAACE,OAAO,IAAG,GAAC,GAAAJ,gBAAA,CAAGC,KAAA,CAAAC,cAAc,CAACG,QAAQ,kBAEjEC,mBAAA,6CAAgD,EAChDC,YAAA,CAA2GC,0BAAA;IAAzFC,SAAS,EAAER,KAAA,CAAAC,cAAc,CAACQ,EAAE;IAAGC,kBAAiB,EAAEC,QAAA,CAAAC;gEAEpEP,mBAAA,4BAA+B,EAC/BC,YAAA,CAA+EO,0BAAA;IAA7DC,YAAY,EAAEd,KAAA,CAAAC,cAAc,CAACa"},"metadata":{},"sourceType":"module","externalDependencies":[]}