{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      transaction: {\n        type: 'credit',\n        amount: 0\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        await axios.post(`http://localhost:3000/transactions/${this.accountId}`, this.transaction);\n        alert('Transaction ajoutée avec succès!');\n        this.transaction.amount = 0;\n        this.transaction.type = 'credit';\n      } catch (error) {\n        console.error('Erreur lors de l’ajout de la transaction', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","accountId","type","Number","required","data","transaction","amount","methods","submitForm","post","alert","error","console"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/components/TransactionForm.vue"],"sourcesContent":["<template>\n  <div>\n    <h3>Ajouter une transaction</h3>\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"type\">Type:</label>\n        <select v-model=\"transaction.type\">\n          <option value=\"credit\">Crédit</option>\n          <option value=\"debit\">Débit</option>\n        </select>\n      </div>\n      <div>\n        <label for=\"amount\">Montant:</label>\n        <input type=\"number\" v-model.number=\"transaction.amount\" required />\n      </div>\n      <div>\n        <button type=\"submit\">Ajouter</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: {\n    accountId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      transaction: {\n        type: 'credit',\n        amount: 0\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        await axios.post(`http://localhost:3000/transactions/${this.accountId}`, this.transaction);\n        alert('Transaction ajoutée avec succès!');\n        this.transaction.amount = 0;\n        this.transaction.type = 'credit';\n      } catch (error) {\n        console.error('Erreur lors de l’ajout de la transaction', error);\n      }\n    }\n  }\n};\n</script>\n"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;QACXJ,IAAI,EAAE,QAAQ;QACdK,MAAM,EAAE;MACV;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMV,KAAK,CAACW,IAAI,CAAE,sCAAqC,IAAI,CAACT,SAAU,EAAC,EAAE,IAAI,CAACK,WAAW,CAAC;QAC1FK,KAAK,CAAC,kCAAkC,CAAC;QACzC,IAAI,CAACL,WAAW,CAACC,MAAK,GAAI,CAAC;QAC3B,IAAI,CAACD,WAAW,CAACJ,IAAG,GAAI,QAAQ;MAClC,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAClE;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}