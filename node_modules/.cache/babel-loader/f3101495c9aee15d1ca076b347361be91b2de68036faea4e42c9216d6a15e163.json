{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      account: null,\n      transactions: []\n    };\n  },\n  created() {\n    this.fetchAccountDetails();\n    this.fetchTransactions();\n  },\n  methods: {\n    fetchAccountDetails() {\n      const accountId = this.$route.params.id; // Récupérer l'ID depuis l'URL\n      axios.get(`http://localhost:3000/accounts/${accountId}`).then(response => {\n        this.account = response.data;\n      }).catch(error => {\n        console.error(\"There was an error fetching the account details:\", error);\n      });\n    },\n    fetchTransactions() {\n      const accountId = this.$route.params.id; // Récupérer l'ID depuis l'URL\n      axios.get(`http://localhost:3000/accounts/${accountId}/transactions`).then(response => {\n        this.transactions = response.data;\n      }).catch(error => {\n        console.error(\"There was an error fetching the transactions:\", error);\n      });\n    },\n    deleteAccount() {\n      const accountId = this.$route.params.id; // Récupérer l'ID depuis l'URL\n      axios.delete(`http://localhost:3000/accounts/${accountId}`).then(() => {\n        this.$router.push('/'); // Redirection vers la page d'accueil après la suppression\n      }).catch(error => {\n        console.error(\"There was an error deleting the account:\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","account","transactions","created","fetchAccountDetails","fetchTransactions","methods","accountId","$route","params","id","get","then","response","catch","error","console","deleteAccount","delete","$router","push"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/views/AccountDetails.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Détails du compte</h1>\n    <div v-if=\"account\">\n      <p>Nom du compte: {{ account.accountName }}</p>\n      <p>Solde initial: {{ account.initialBalance }}</p>\n      <p>Solde actuel: {{ account.balance }}</p>\n      <p>Devise: {{ account.currency }}</p>\n\n      <h2>Transactions</h2>\n      <ul>\n        <li v-for=\"transaction in transactions\" :key=\"transaction.id\">\n          {{ transaction.date }} - {{ transaction.category }} - {{ transaction.amount }} - {{ transaction.description }}\n        </li>\n      </ul>\n\n      <button @click=\"fetchTransactions\">Actualiser les Transactions</button>\n      <button @click=\"deleteAccount\">Supprimer le Compte</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      account: null,\n      transactions: []\n    };\n  },\n  created() {\n    this.fetchAccountDetails();\n    this.fetchTransactions();\n  },\n  methods: {\n    fetchAccountDetails() {\n      const accountId = this.$route.params.id; // Récupérer l'ID depuis l'URL\n      axios.get(`http://localhost:3000/accounts/${accountId}`)\n        .then(response => {\n          this.account = response.data;\n        })\n        .catch(error => {\n          console.error(\"There was an error fetching the account details:\", error);\n        });\n    },\n    fetchTransactions() {\n      const accountId = this.$route.params.id; // Récupérer l'ID depuis l'URL\n      axios.get(`http://localhost:3000/accounts/${accountId}/transactions`)\n        .then(response => {\n          this.transactions = response.data;\n        })\n        .catch(error => {\n          console.error(\"There was an error fetching the transactions:\", error);\n        });\n    },\n    deleteAccount() {\n      const accountId = this.$route.params.id; // Récupérer l'ID depuis l'URL\n      axios.delete(`http://localhost:3000/accounts/${accountId}`)\n        .then(() => {\n          this.$router.push('/'); // Redirection vers la page d'accueil après la suppression\n        })\n        .catch(error => {\n          console.error(\"There was an error deleting the account:\", error);\n        });\n    }\n  }\n};\n</script>\n"],"mappings":";AAuBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACPF,mBAAmBA,CAAA,EAAG;MACpB,MAAMG,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE;MACzCX,KAAK,CAACY,GAAG,CAAE,kCAAiCJ,SAAU,EAAC,EACpDK,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACZ,OAAM,GAAIY,QAAQ,CAACb,IAAI;MAC9B,CAAC,EACAc,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;MAC1E,CAAC,CAAC;IACN,CAAC;IACDV,iBAAiBA,CAAA,EAAG;MAClB,MAAME,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE;MACzCX,KAAK,CAACY,GAAG,CAAE,kCAAiCJ,SAAU,eAAc,EACjEK,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACX,YAAW,GAAIW,QAAQ,CAACb,IAAI;MACnC,CAAC,EACAc,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACvE,CAAC,CAAC;IACN,CAAC;IACDE,aAAaA,CAAA,EAAG;MACd,MAAMV,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE;MACzCX,KAAK,CAACmB,MAAM,CAAE,kCAAiCX,SAAU,EAAC,EACvDK,IAAI,CAAC,MAAM;QACV,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;MAC1B,CAAC,EACAN,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAClE,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}