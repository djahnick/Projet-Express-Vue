{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e1e7ce2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"account-details\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Détails du Compte\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"account-info\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Nom du Compte:\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Solde:\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TransactionForm = _resolveComponent(\"TransactionForm\");\n  const _component_TransactionList = _resolveComponent(\"TransactionList\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, [_hoisted_4, _createTextVNode(\" \" + _toDisplayString($data.accountDetails.accountName), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_5, _createTextVNode(\" \" + _toDisplayString($data.accountDetails.balance) + \" \" + _toDisplayString($data.accountDetails.currency), 1 /* TEXT */)])]), _createVNode(_component_TransactionForm, {\n    accountId: $data.accountDetails.id,\n    onTransactionCreated: $options.updateTransactions,\n    class: \"transaction-form\"\n  }, null, 8 /* PROPS */, [\"accountId\", \"onTransactionCreated\"]), _createVNode(_component_TransactionList, {\n    ref: \"transactionList\",\n    accountId: $data.accountDetails.id,\n    class: \"transaction-list\"\n  }, null, 8 /* PROPS */, [\"accountId\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$data","accountDetails","accountName","_hoisted_5","balance","currency","_createVNode","_component_TransactionForm","accountId","id","onTransactionCreated","$options","updateTransactions","_component_TransactionList","ref"],"sources":["/Users/djahnickefrei/monProjet/bank-frontend/src/views/AccountDetails.vue"],"sourcesContent":["<template>\n  <div class=\"account-details\">\n    <h2>Détails du Compte</h2>\n    <div class=\"account-info\">\n      <p><strong>Nom du Compte:</strong> {{ accountDetails.accountName }}</p>\n      <p><strong>Solde:</strong> {{ accountDetails.balance }} {{ accountDetails.currency }}</p>\n    </div>\n    \n    <TransactionForm :accountId=\"accountDetails.id\" @transaction-created=\"updateTransactions\" class=\"transaction-form\"></TransactionForm>\n    <TransactionList ref=\"transactionList\" :accountId=\"accountDetails.id\" class=\"transaction-list\"></TransactionList>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\nimport TransactionForm from '../components/TransactionForm.vue';\nimport TransactionList from '../components/TransactionList.vue';\n\nexport default {\n  name: 'AccountDetails',\n  components: {\n    TransactionForm,\n    TransactionList\n  },\n  data() {\n    return {\n      accountDetails: {}\n    };\n  },\n  async created() {\n    await this.fetchAccountDetails();\n  },\n  methods: {\n    async fetchAccountDetails() {\n      try {\n        const accountId = this.$route.params.id;\n        const response = await axios.get(`http://localhost:3000/accounts/${accountId}`);\n        this.accountDetails = response.data;\n      } catch (error) {\n        console.error('Erreur lors de la récupération des détails du compte', error);\n      }\n    },\n    async updateTransactions() {\n      await this.fetchAccountDetails(); // Rafraîchir les détails du compte\n      this.$refs.transactionList.fetchTransactions(); // Rafraîchir la liste des transactions\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Styles si nécessaire */\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAiB;gEAC1BC,mBAAA,CAA0B,YAAtB,mBAAiB;;EAChBD,KAAK,EAAC;AAAc;gEACpBC,mBAAA,CAA+B,gBAAvB,gBAAc;gEACtBA,mBAAA,CAAuB,gBAAf,QAAM;;;;;uBAJrBC,mBAAA,CASM,OATNC,UASM,GARJC,UAA0B,EAC1BH,mBAAA,CAGM,OAHNI,UAGM,GAFJJ,mBAAA,CAAuE,YAApEK,UAA+B,E,iBAAA,GAAC,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,cAAc,CAACC,WAAW,iB,GAChET,mBAAA,CAAyF,YAAtFU,UAAuB,E,iBAAA,GAAC,GAAAJ,gBAAA,CAAGC,KAAA,CAAAC,cAAc,CAACG,OAAO,IAAG,GAAC,GAAAL,gBAAA,CAAGC,KAAA,CAAAC,cAAc,CAACI,QAAQ,iB,KAGpFC,YAAA,CAAqIC,0BAAA;IAAnHC,SAAS,EAAER,KAAA,CAAAC,cAAc,CAACQ,EAAE;IAAGC,oBAAmB,EAAEC,QAAA,CAAAC,kBAAkB;IAAEpB,KAAK,EAAC;kEAChGc,YAAA,CAAiHO,0BAAA;IAAhGC,GAAG,EAAC,iBAAiB;IAAEN,SAAS,EAAER,KAAA,CAAAC,cAAc,CAACQ,EAAE;IAAEjB,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}